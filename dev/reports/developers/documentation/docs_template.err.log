Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import napari
from napari.utils import nbscreenshot

viewer = napari.Viewer()
# opens sample data and adds layer to the Viewer
viewer.open_sample('napari', 'cells3d')

# takes a screenshot and produces it as output for this cell
nbscreenshot(viewer, alt_text="Example generated screenshot of the napari viewer.")
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Input [0;32mIn [1][0m, in [0;36m<cell line: 6>[0;34m()[0m
[1;32m      4[0m viewer [38;5;241m=[39m napari[38;5;241m.[39mViewer()
[1;32m      5[0m [38;5;66;03m# opens sample data and adds layer to the Viewer[39;00m
[0;32m----> 6[0m [43mviewer[49m[38;5;241;43m.[39;49m[43mopen_sample[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mnapari[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mcells3d[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m      8[0m [38;5;66;03m# takes a screenshot and produces it as output for this cell[39;00m
[1;32m      9[0m nbscreenshot(viewer, alt_text[38;5;241m=[39m[38;5;124m"[39m[38;5;124mExample generated screenshot of the napari viewer.[39m[38;5;124m"[39m)

File [0;32m~/work/napari/napari/napari/components/viewer_model.py:903[0m, in [0;36mViewerModel.open_sample[0;34m(self, plugin, sample, reader_plugin, **kwargs)[0m
[1;32m    901[0m     added [38;5;241m=[39m []
[1;32m    902[0m     [38;5;28;01mfor[39;00m datum [38;5;129;01min[39;00m data([38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m--> 903[0m         added[38;5;241m.[39mextend([38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_add_layer_from_data[49m[43m([49m[38;5;241;43m*[39;49m[43mdatum[49m[43m)[49m)
[1;32m    904[0m     [38;5;28;01mreturn[39;00m added
[1;32m    905[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(data, ([38;5;28mstr[39m, Path)):

File [0;32m~/work/napari/napari/napari/components/viewer_model.py:1306[0m, in [0;36mViewerModel._add_layer_from_data[0;34m(self, data, meta, layer_type)[0m
[1;32m   1304[0m [38;5;28;01mtry[39;00m:
[1;32m   1305[0m     add_method [38;5;241m=[39m [38;5;28mgetattr[39m([38;5;28mself[39m, [38;5;124m'[39m[38;5;124madd_[39m[38;5;124m'[39m [38;5;241m+[39m layer_type)
[0;32m-> 1306[0m     layer [38;5;241m=[39m [43madd_method[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43m([49m[43mmeta[49m[43m [49m[38;5;129;43;01mor[39;49;00m[43m [49m[43m{[49m[43m}[49m[43m)[49m[43m)[49m
[1;32m   1307[0m [38;5;28;01mexcept[39;00m [38;5;167;01mTypeError[39;00m [38;5;28;01mas[39;00m exc:
[1;32m   1308[0m     [38;5;28;01mif[39;00m [38;5;124m'[39m[38;5;124munexpected keyword argument[39m[38;5;124m'[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m [38;5;28mstr[39m(exc):

File [0;32m~/work/napari/napari/napari/utils/migrations.py:44[0m, in [0;36mrename_argument.<locals>._wrapper.<locals>._update_from_dict[0;34m(*args, **kwargs)[0m
[1;32m     42[0m     kwargs [38;5;241m=[39m kwargs[38;5;241m.[39mcopy()
[1;32m     43[0m     kwargs[to_name] [38;5;241m=[39m kwargs[38;5;241m.[39mpop(from_name)
[0;32m---> 44[0m [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/work/napari/napari/napari/components/viewer_model.py:813[0m, in [0;36mViewerModel.add_image[0;34m(self, data, channel_axis, rgb, colormap, contrast_limits, gamma, interpolation2d, interpolation3d, rendering, depiction, iso_threshold, attenuation, name, metadata, scale, translate, rotate, shear, affine, opacity, blending, visible, multiscale, cache, plane, experimental_clipping_planes)[0m
[1;32m    811[0m     [38;5;28;01mreturn[39;00m layer
[1;32m    812[0m [38;5;28;01melse[39;00m:
[0;32m--> 813[0m     layerdata_list [38;5;241m=[39m [43msplit_channels[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mchannel_axis[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    815[0m     layer_list [38;5;241m=[39m [38;5;28mlist[39m()
[1;32m    816[0m     [38;5;28;01mfor[39;00m image, i_kwargs, _ [38;5;129;01min[39;00m layerdata_list:

File [0;32m~/work/napari/napari/napari/layers/utils/stack_utils.py:117[0m, in [0;36msplit_channels[0;34m(data, channel_axis, **kwargs)[0m
[1;32m    110[0m [38;5;66;03m# make sure that iterable_kwargs are a *sequence* of iterables[39;00m
[1;32m    111[0m [38;5;66;03m# for the multichannel case.  For example: if scale == (1, 2) &[39;00m
[1;32m    112[0m [38;5;66;03m# n_channels = 3, then scale should == [(1, 2), (1, 2), (1, 2)][39;00m
[1;32m    113[0m [38;5;28;01melif[39;00m key [38;5;129;01min[39;00m iterable_kwargs [38;5;129;01mor[39;00m (
[1;32m    114[0m     key [38;5;241m==[39m [38;5;124m'[39m[38;5;124mcolormap[39m[38;5;124m'[39m [38;5;129;01mand[39;00m [38;5;28misinstance[39m(val, Colormap)
[1;32m    115[0m ):
[1;32m    116[0m     kwargs[key] [38;5;241m=[39m [38;5;28miter[39m(
[0;32m--> 117[0m         [43mensure_sequence_of_iterables[49m[43m([49m
[1;32m    118[0m [43m            [49m[43mval[49m[43m,[49m
[1;32m    119[0m [43m            [49m[43mn_channels[49m[43m,[49m
[1;32m    120[0m [43m            [49m[43mrepeat_empty[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m
[1;32m    121[0m [43m            [49m[43mallow_none[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m
[1;32m    122[0m [43m        [49m[43m)[49m
[1;32m    123[0m     )
[1;32m    124[0m [38;5;28;01melse[39;00m:
[1;32m    125[0m     kwargs[key] [38;5;241m=[39m [38;5;28miter[39m(ensure_iterable(val))

File [0;32m~/work/napari/napari/napari/utils/misc.py:224[0m, in [0;36mensure_sequence_of_iterables[0;34m(obj, length, repeat_empty, allow_none)[0m
[1;32m    221[0m [38;5;28;01mif[39;00m length [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m [38;5;28mlen[39m(obj) [38;5;241m!=[39m length:
[1;32m    222[0m     [38;5;28;01mif[39;00m ([38;5;28mlen[39m(obj) [38;5;241m==[39m [38;5;241m0[39m [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m repeat_empty) [38;5;129;01mor[39;00m [38;5;28mlen[39m(obj) [38;5;241m>[39m [38;5;241m0[39m:
[1;32m    223[0m         [38;5;66;03m# sequence of iterables of wrong length[39;00m
[0;32m--> 224[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    225[0m             trans[38;5;241m.[39m_(
[1;32m    226[0m                 [38;5;124m"[39m[38;5;124mlength of [39m[38;5;132;01m{obj}[39;00m[38;5;124m must equal [39m[38;5;132;01m{length}[39;00m[38;5;124m"[39m,
[1;32m    227[0m                 deferred[38;5;241m=[39m[38;5;28;01mTrue[39;00m,
[1;32m    228[0m                 obj[38;5;241m=[39mobj,
[1;32m    229[0m                 length[38;5;241m=[39mlength,
[1;32m    230[0m             )
[1;32m    231[0m         )
[1;32m    233[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(obj) [38;5;241m>[39m [38;5;241m0[39m [38;5;129;01mor[39;00m [38;5;129;01mnot[39;00m repeat_empty:
[1;32m    234[0m     [38;5;28;01mreturn[39;00m obj

[0;31mValueError[0m: length of [(1110, 23855), (1600, 50000)] must equal 256
ValueError: length of [(1110, 23855), (1600, 50000)] must equal 256

