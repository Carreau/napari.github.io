{"pageProps":{"state":{"globalHeaders":{"https://napari-hub.org":{"level":1,"children":[],"href":"https://napari-hub.org","text":"napari hub"},"https://github.com/napari/napari":{"level":1,"children":[],"href":"https://github.com/napari/napari","text":"napari source code"},"/roadmaps/index.html":{"level":1,"children":["/roadmaps/0_4.html","/roadmaps/0_3_retrospective.html","/roadmaps/0_3.html"],"href":"/roadmaps/index.html","text":"Roadmaps"},"/roadmaps/0_3.html":{"level":2,"children":[],"href":"/roadmaps/0_3.html","text":"Roadmap 0.3"},"/roadmaps/0_3_retrospective.html":{"level":2,"children":[],"href":"/roadmaps/0_3_retrospective.html","text":"Roadmap 0.3 Retrospective"},"/roadmaps/0_4.html":{"level":2,"children":[],"href":"/roadmaps/0_4.html","text":"Roadmap 0.4"},"/release/index.html":{"level":1,"children":["/release/release_0_4_12.html","/release/release_0_4_11.html","/release/release_0_4_10.html","/release/release_0_4_9.html","/release/release_0_4_8.html","/release/release_0_4_7.html","/release/release_0_4_6.html","/release/release_0_4_5.html","/release/release_0_4_4.html","/release/release_0_4_3.html","/release/release_0_4_2.html","/release/release_0_4_1.html","/release/release_0_4_0.html","/release/release_0_3_8.html","/release/release_0_3_7.html","/release/release_0_3_6.html","/release/release_0_3_5.html","/release/release_0_3_4.html","/release/release_0_3_3.html","/release/release_0_3_2.html","/release/release_0_3_1.html","/release/release_0_3_0.html","/release/release_0_2_12.html","/release/release_0_2_11.html","/release/release_0_2_10.html","/release/release_0_2_9.html","/release/release_0_2_8.html","/release/release_0_2_7.html","/release/release_0_2_6.html","/release/release_0_2_5.html","/release/release_0_2_4.html","/release/release_0_2_3.html","/release/release_0_2_1.html","/release/release_0_2_0.html","/release/release_0_1_5.html","/release/release_0_1_3.html","/release/release_0_1_0.html","/release/release_0_4_13.html","/release/release_0_4_14.html"],"href":"/release/index.html","text":"Release notes"},"/release/release_0_4_14.html":{"level":2,"children":[],"href":"/release/release_0_4_14.html","text":"napari 0.4.14"},"/release/release_0_4_13.html":{"level":2,"children":[],"href":"/release/release_0_4_13.html","text":"napari 0.4.13"},"/release/release_0_1_0.html":{"level":2,"children":[],"href":"/release/release_0_1_0.html","text":"napari 0.1.0"},"/release/release_0_1_3.html":{"level":2,"children":[],"href":"/release/release_0_1_3.html","text":"napari 0.1.3"},"/release/release_0_1_5.html":{"level":2,"children":[],"href":"/release/release_0_1_5.html","text":"napari 0.1.5"},"/release/release_0_2_0.html":{"level":2,"children":[],"href":"/release/release_0_2_0.html","text":"napari 0.2.0"},"/release/release_0_2_1.html":{"level":2,"children":[],"href":"/release/release_0_2_1.html","text":"napari 0.2.1"},"/release/release_0_2_3.html":{"level":2,"children":[],"href":"/release/release_0_2_3.html","text":"napari 0.2.3"},"/release/release_0_2_4.html":{"level":2,"children":[],"href":"/release/release_0_2_4.html","text":"napari 0.2.4"},"/release/release_0_2_5.html":{"level":2,"children":[],"href":"/release/release_0_2_5.html","text":"napari 0.2.5"},"/release/release_0_2_6.html":{"level":2,"children":[],"href":"/release/release_0_2_6.html","text":"napari 0.2.6"},"/release/release_0_2_7.html":{"level":2,"children":[],"href":"/release/release_0_2_7.html","text":"napari 0.2.7"},"/release/release_0_2_8.html":{"level":2,"children":[],"href":"/release/release_0_2_8.html","text":"napari 0.2.8"},"/release/release_0_2_9.html":{"level":2,"children":[],"href":"/release/release_0_2_9.html","text":"napari 0.2.9"},"/release/release_0_2_10.html":{"level":2,"children":[],"href":"/release/release_0_2_10.html","text":"napari 0.2.10"},"/release/release_0_2_11.html":{"level":2,"children":[],"href":"/release/release_0_2_11.html","text":"napari 0.2.11"},"/release/release_0_2_12.html":{"level":2,"children":[],"href":"/release/release_0_2_12.html","text":"napari 0.2.12"},"/release/release_0_3_0.html":{"level":2,"children":[],"href":"/release/release_0_3_0.html","text":"napari 0.3.0"},"/release/release_0_3_1.html":{"level":2,"children":[],"href":"/release/release_0_3_1.html","text":"napari 0.3.1"},"/release/release_0_3_2.html":{"level":2,"children":[],"href":"/release/release_0_3_2.html","text":"napari 0.3.2"},"/release/release_0_3_3.html":{"level":2,"children":[],"href":"/release/release_0_3_3.html","text":"napari 0.3.3"},"/release/release_0_3_4.html":{"level":2,"children":[],"href":"/release/release_0_3_4.html","text":"napari 0.3.4"},"/release/release_0_3_5.html":{"level":2,"children":[],"href":"/release/release_0_3_5.html","text":"napari 0.3.5"},"/release/release_0_3_6.html":{"level":2,"children":[],"href":"/release/release_0_3_6.html","text":"napari 0.3.6"},"/release/release_0_3_7.html":{"level":2,"children":[],"href":"/release/release_0_3_7.html","text":"napari 0.3.7"},"/release/release_0_3_8.html":{"level":2,"children":[],"href":"/release/release_0_3_8.html","text":"napari 0.3.8"},"/release/release_0_4_0.html":{"level":2,"children":[],"href":"/release/release_0_4_0.html","text":"napari 0.4.0"},"/release/release_0_4_1.html":{"level":2,"children":[],"href":"/release/release_0_4_1.html","text":"napari 0.4.1"},"/release/release_0_4_2.html":{"level":2,"children":[],"href":"/release/release_0_4_2.html","text":"napari 0.4.2"},"/release/release_0_4_3.html":{"level":2,"children":[],"href":"/release/release_0_4_3.html","text":"napari 0.4.3"},"/release/release_0_4_4.html":{"level":2,"children":[],"href":"/release/release_0_4_4.html","text":"napari 0.4.4"},"/release/release_0_4_5.html":{"level":2,"children":[],"href":"/release/release_0_4_5.html","text":"napari 0.4.5"},"/release/release_0_4_6.html":{"level":2,"children":[],"href":"/release/release_0_4_6.html","text":"napari 0.4.6"},"/release/release_0_4_7.html":{"level":2,"children":[],"href":"/release/release_0_4_7.html","text":"napari 0.4.7"},"/release/release_0_4_8.html":{"level":2,"children":[],"href":"/release/release_0_4_8.html","text":"napari 0.4.8"},"/release/release_0_4_9.html":{"level":2,"children":[],"href":"/release/release_0_4_9.html","text":"napari 0.4.9"},"/release/release_0_4_10.html":{"level":2,"children":[],"href":"/release/release_0_4_10.html","text":"napari 0.4.10"},"/release/release_0_4_11.html":{"level":2,"children":[],"href":"/release/release_0_4_11.html","text":"napari 0.4.11"},"/release/release_0_4_12.html":{"level":2,"children":[],"href":"/release/release_0_4_12.html","text":"napari 0.4.12"},"/glossary.html":{"level":1,"children":[],"href":"/glossary.html","text":"Glossary"},"/developers/index.html":{"level":1,"children":["/developers/benchmarks.html","/developers/contributing.html","/developers/core_dev_guide.html","/developers/profiling.html","/developers/release.html","/developers/testing.html","/developers/docs.html","/developers/translations.html"],"href":"/developers/index.html","text":"Developer resources"},"/developers/translations.html":{"level":2,"children":[],"href":"/developers/translations.html","text":"Translations"},"/developers/docs.html":{"level":2,"children":[],"href":"/developers/docs.html","text":"Organization of Documentation for napari"},"/developers/testing.html":{"level":2,"children":[],"href":"/developers/testing.html","text":"Testing"},"/developers/release.html":{"level":2,"children":[],"href":"/developers/release.html","text":"Release guide"},"/developers/profiling.html":{"level":2,"children":[],"href":"/developers/profiling.html","text":"Profiling"},"/developers/core_dev_guide.html":{"level":2,"children":[],"href":"/developers/core_dev_guide.html","text":"Core Developer guide"},"/developers/contributing.html":{"level":2,"children":[],"href":"/developers/contributing.html","text":"Contributing guide"},"/developers/benchmarks.html":{"level":2,"children":[],"href":"/developers/benchmarks.html","text":"Benchmarks"},"/api/stable/index.html":{"level":1,"children":["/api/stable/napari.layers.html","/api/stable/napari.view_layers.html","/api/stable/napari.types.html","/api/stable/napari.utils.html","/api/stable/napari.plugins.html","/api/stable/napari.components.html","/api/stable/napari.qt.threading.html","/api/stable/napari.utils.perf.html","/api/stable/napari.html","/api/stable/napari.html"],"href":"/api/stable/index.html","text":"API reference"},"/api/stable/napari.html":{"level":2,"children":["/api/stable/napari.Viewer.html"],"href":"/api/stable/napari.html","text":"napari"},"/api/stable/napari.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.Viewer.html","text":"napari.Viewer"},"/api/stable/napari.utils.perf.html":{"level":2,"children":["/api/stable/napari.utils.perf.PerfEvent.html"],"href":"/api/stable/napari.utils.perf.html","text":"napari.utils.perf"},"/api/stable/napari.utils.perf.PerfEvent.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.perf.PerfEvent.html","text":"napari.utils.perf.PerfEvent"},"/api/stable/napari.qt.threading.html":{"level":2,"children":["/api/stable/napari.qt.threading.FunctionWorker.html","/api/stable/napari.qt.threading.GeneratorWorker.html","/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","/api/stable/napari.qt.threading.WorkerBase.html","/api/stable/napari.qt.threading.WorkerBaseSignals.html"],"href":"/api/stable/napari.qt.threading.html","text":"napari.qt.threading"},"/api/stable/napari.qt.threading.WorkerBaseSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBaseSignals.html","text":"napari.qt.threading.WorkerBaseSignals"},"/api/stable/napari.qt.threading.WorkerBase.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBase.html","text":"napari.qt.threading.WorkerBase"},"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","text":"napari.qt.threading.GeneratorWorkerSignals"},"/api/stable/napari.qt.threading.GeneratorWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorker.html","text":"napari.qt.threading.GeneratorWorker"},"/api/stable/napari.qt.threading.FunctionWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.FunctionWorker.html","text":"napari.qt.threading.FunctionWorker"},"/api/stable/napari.components.html":{"level":2,"children":["/api/stable/napari.components.Camera.html","/api/stable/napari.components.Dims.html","/api/stable/napari.components.LayerList.html","/api/stable/napari.components.ViewerModel.html"],"href":"/api/stable/napari.components.html","text":"napari.components"},"/api/stable/napari.components.ViewerModel.html":{"level":3,"children":[],"href":"/api/stable/napari.components.ViewerModel.html","text":"napari.components.ViewerModel"},"/api/stable/napari.components.LayerList.html":{"level":3,"children":[],"href":"/api/stable/napari.components.LayerList.html","text":"napari.components.LayerList"},"/api/stable/napari.components.Dims.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Dims.html","text":"napari.components.Dims"},"/api/stable/napari.components.Camera.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Camera.html","text":"napari.components.Camera"},"/api/stable/napari.plugins.html":{"level":2,"children":["/api/stable/napari.plugins.NapariPluginManager.html","/api/stable/napari.plugins.PackageMetadata.html","/api/stable/napari.plugins.Path.html","/api/stable/napari.plugins.PluginManifest.html"],"href":"/api/stable/napari.plugins.html","text":"napari.plugins"},"/api/stable/napari.plugins.PluginManifest.html":{"level":3,"children":[],"href":"/api/stable/napari.plugins.PluginManifest.html","text":"napari.plugins.PluginManifest"},"/api/stable/napari.plugins.Path.html":{"level":3,"children":[],"href":"/api/stable/napari.plugins.Path.html","text":"napari.plugins.Path"},"/api/stable/napari.plugins.PackageMetadata.html":{"level":3,"children":[],"href":"/api/stable/napari.plugins.PackageMetadata.html","text":"napari.plugins.PackageMetadata"},"/api/stable/napari.plugins.NapariPluginManager.html":{"level":3,"children":[],"href":"/api/stable/napari.plugins.NapariPluginManager.html","text":"napari.plugins.NapariPluginManager"},"/api/stable/napari.utils.html":{"level":2,"children":["/api/stable/napari.utils.Colormap.html","/api/stable/napari.utils.nbscreenshot.html","/api/stable/napari.utils.progress.html"],"href":"/api/stable/napari.utils.html","text":"napari.utils"},"/api/stable/napari.utils.progress.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.progress.html","text":"napari.utils.progress"},"/api/stable/napari.utils.nbscreenshot.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.nbscreenshot.html","text":"napari.utils.nbscreenshot"},"/api/stable/napari.utils.Colormap.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.Colormap.html","text":"napari.utils.Colormap"},"/api/stable/napari.types.html":{"level":2,"children":["/api/stable/napari.types.ArrayBase.html","/api/stable/napari.types.Path.html","/api/stable/napari.types.SampleDict.html","/api/stable/napari.types.TracebackType.html","/api/stable/napari.types.TypedDict.html","/api/stable/napari.types.partial.html"],"href":"/api/stable/napari.types.html","text":"napari.types"},"/api/stable/napari.types.partial.html":{"level":3,"children":[],"href":"/api/stable/napari.types.partial.html","text":"napari.types.partial"},"/api/stable/napari.types.TypedDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TypedDict.html","text":"napari.types.TypedDict"},"/api/stable/napari.types.TracebackType.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TracebackType.html","text":"napari.types.TracebackType"},"/api/stable/napari.types.SampleDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.SampleDict.html","text":"napari.types.SampleDict"},"/api/stable/napari.types.Path.html":{"level":3,"children":[],"href":"/api/stable/napari.types.Path.html","text":"napari.types.Path"},"/api/stable/napari.types.ArrayBase.html":{"level":3,"children":[],"href":"/api/stable/napari.types.ArrayBase.html","text":"napari.types.ArrayBase"},"/api/stable/napari.view_layers.html":{"level":2,"children":["/api/stable/napari.view_layers.Dims.html","/api/stable/napari.view_layers.Viewer.html"],"href":"/api/stable/napari.view_layers.html","text":"napari.view_layers"},"/api/stable/napari.view_layers.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.view_layers.Viewer.html","text":"napari.view_layers.Viewer"},"/api/stable/napari.view_layers.Dims.html":{"level":3,"children":[],"href":"/api/stable/napari.view_layers.Dims.html","text":"napari.view_layers.Dims"},"/api/stable/napari.layers.html":{"level":2,"children":["/api/stable/napari.layers.Image.html","/api/stable/napari.layers.Labels.html","/api/stable/napari.layers.Layer.html","/api/stable/napari.layers.Points.html","/api/stable/napari.layers.Shapes.html","/api/stable/napari.layers.Surface.html","/api/stable/napari.layers.Tracks.html","/api/stable/napari.layers.Vectors.html"],"href":"/api/stable/napari.layers.html","text":"napari.layers"},"/api/stable/napari.layers.Vectors.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Vectors.html","text":"napari.layers.Vectors"},"/api/stable/napari.layers.Tracks.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Tracks.html","text":"napari.layers.Tracks"},"/api/stable/napari.layers.Surface.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Surface.html","text":"napari.layers.Surface"},"/api/stable/napari.layers.Shapes.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Shapes.html","text":"napari.layers.Shapes"},"/api/stable/napari.layers.Points.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Points.html","text":"napari.layers.Points"},"/api/stable/napari.layers.Layer.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Layer.html","text":"napari.layers.Layer"},"/api/stable/napari.layers.Labels.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Labels.html","text":"napari.layers.Labels"},"/api/stable/napari.layers.Image.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Image.html","text":"napari.layers.Image"},"/community/index.html":{"level":1,"children":["/community/mission_and_values.html","/community/team.html","/community/code_of_conduct.html","/community/code_of_conduct_reporting.html","/community/governance.html","/community/working_groups.html","/community/meeting_schedule.html"],"href":"/community/index.html","text":"Community"},"/community/meeting_schedule.html":{"level":2,"children":[],"href":"/community/meeting_schedule.html","text":"Meeting schedule"},"/community/working_groups.html":{"level":2,"children":[],"href":"/community/working_groups.html","text":"Working groups"},"/community/governance.html":{"level":2,"children":[],"href":"/community/governance.html","text":"Governance model"},"/community/code_of_conduct_reporting.html":{"level":2,"children":[],"href":"/community/code_of_conduct_reporting.html","text":"Handling Code of Conduct reports"},"/community/code_of_conduct.html":{"level":2,"children":[],"href":"/community/code_of_conduct.html","text":"Code of Conduct"},"/community/team.html":{"level":2,"children":[],"href":"/community/team.html","text":"About the project and team"},"/community/mission_and_values.html":{"level":2,"children":[],"href":"/community/mission_and_values.html","text":"Mission and Values"},"/plugins/stable/index.html":{"level":1,"children":["/plugins/stable/first_plugin.html","/plugins/stable/manifest.html","/plugins/stable/contributions.html","/plugins/stable/guides.html","/plugins/stable/test_deploy.html","/plugins/stable/best_practices.html","/plugins/stable/npe2_migration_guide.html","/plugins/stable/npe1.html","/plugins/stable/find_and_install_plugin.html"],"href":"/plugins/stable/index.html","text":"Plugins"},"/plugins/stable/find_and_install_plugin.html":{"level":2,"children":[],"href":"/plugins/stable/find_and_install_plugin.html","text":"Finding and installing a napari plugin"},"/plugins/stable/npe1.html":{"level":2,"children":[],"href":"/plugins/stable/npe1.html","text":"1st Gen Plugin Guide (Deprecated)"},"/plugins/stable/npe2_migration_guide.html":{"level":2,"children":[],"href":"/plugins/stable/npe2_migration_guide.html","text":"npe2 migration guide"},"/plugins/stable/best_practices.html":{"level":2,"children":[],"href":"/plugins/stable/best_practices.html","text":"Best practices"},"/plugins/stable/test_deploy.html":{"level":2,"children":[],"href":"/plugins/stable/test_deploy.html","text":"Test and Deploy"},"/plugins/stable/guides.html":{"level":2,"children":[],"href":"/plugins/stable/guides.html","text":"Contribution Guides"},"/plugins/stable/contributions.html":{"level":2,"children":[],"href":"/plugins/stable/contributions.html","text":"Contributions Reference"},"/plugins/stable/manifest.html":{"level":2,"children":[],"href":"/plugins/stable/manifest.html","text":"Manifest Reference"},"/plugins/stable/first_plugin.html":{"level":2,"children":[],"href":"/plugins/stable/first_plugin.html","text":"Your First Plugin"},"/guides/stable/index.html":{"level":1,"children":["/guides/stable/magicgui.html","/guides/stable/event_loop.html","/guides/stable/threading.html","/guides/stable/rendering-explanation.html","/guides/stable/rendering.html","/guides/stable/performance.html","/guides/stable/3D_interactivity.html","/guides/stable/events_reference.html","/guides/stable/contexts_expressions.html","/guides/stable/preferences.html"],"href":"/guides/stable/index.html","text":"In-depth explanations"},"/guides/stable/preferences.html":{"level":2,"children":[],"href":"/guides/stable/preferences.html","text":"Preferences"},"/guides/stable/contexts_expressions.html":{"level":2,"children":[],"href":"/guides/stable/contexts_expressions.html","text":"Contexts and Expressions in napari"},"/guides/stable/events_reference.html":{"level":2,"children":[],"href":"/guides/stable/events_reference.html","text":"Events reference"},"/guides/stable/3D_interactivity.html":{"level":2,"children":[],"href":"/guides/stable/3D_interactivity.html","text":"3D interactivity"},"/guides/stable/performance.html":{"level":2,"children":[],"href":"/guides/stable/performance.html","text":"napari performance"},"/guides/stable/rendering.html":{"level":2,"children":[],"href":"/guides/stable/rendering.html","text":"Asynchronous rendering"},"/guides/stable/rendering-explanation.html":{"level":2,"children":[],"href":"/guides/stable/rendering-explanation.html","text":"Rendering in napari"},"/guides/stable/threading.html":{"level":2,"children":[],"href":"/guides/stable/threading.html","text":"Multithreading in napari"},"/guides/stable/event_loop.html":{"level":2,"children":[],"href":"/guides/stable/event_loop.html","text":"An introduction to the event loop in napari"},"/guides/stable/magicgui.html":{"level":2,"children":[],"href":"/guides/stable/magicgui.html","text":"Using magicgui in napari"},"/howtos/index.html":{"level":1,"children":["/howtos/connecting_events.html","/howtos/napari_imageJ.html","/howtos/docker.html","/howtos/perfmon.html"],"href":"/howtos/index.html","text":"How-to guides"},"/howtos/perfmon.html":{"level":2,"children":[],"href":"/howtos/perfmon.html","text":"Performance monitoring"},"/howtos/docker.html":{"level":2,"children":[],"href":"/howtos/docker.html","text":"Napari in Docker"},"/howtos/napari_imageJ.html":{"level":2,"children":[],"href":"/howtos/napari_imageJ.html","text":"napari + ImageJ how-to guide"},"/howtos/connecting_events.html":{"level":2,"children":[],"href":"/howtos/connecting_events.html","text":"Hooking up your own events"},"/tutorials/index.html":{"level":1,"children":["/tutorials/segmentation/index.html","/tutorials/tracking/index.html","/tutorials/applications/annotate_points.html","/tutorials/applications/dask.html","/tutorials/further-resources/napari-workshops.html","/tutorials/tracking/cell_tracking.html","/tutorials/segmentation/annotate_segmentation.html"],"href":"/tutorials/index.html","text":"Tutorials"},"/tutorials/segmentation/annotate_segmentation.html":{"level":2,"children":[],"href":"/tutorials/segmentation/annotate_segmentation.html","text":"Annotating segmentation with text and bounding boxes"},"/tutorials/tracking/cell_tracking.html":{"level":2,"children":[],"href":"/tutorials/tracking/cell_tracking.html","text":"Single cell tracking with napari"},"/tutorials/further-resources/napari-workshops.html":{"level":2,"children":[],"href":"/tutorials/further-resources/napari-workshops.html","text":"napari workshops"},"/tutorials/applications/dask.html":{"level":2,"children":[],"href":"/tutorials/applications/dask.html","text":"Using Dask and napari to process & view large datasets"},"/tutorials/applications/annotate_points.html":{"level":2,"children":[],"href":"/tutorials/applications/annotate_points.html","text":"Annotating videos with napari"},"/tutorials/tracking/index.html":{"level":2,"children":[],"href":"/tutorials/tracking/index.html","text":"Tracking"},"/tutorials/segmentation/index.html":{"level":2,"children":[],"href":"/tutorials/segmentation/index.html","text":"Segmentation"},"/tutorials/start_index.html":{"level":1,"children":["/tutorials/fundamentals/installation.html","/tutorials/fundamentals/getting_started.html","/tutorials/fundamentals/viewer.html","/tutorials/fundamentals/image.html","/tutorials/fundamentals/labels.html","/tutorials/fundamentals/points.html","/tutorials/fundamentals/shapes.html","/tutorials/fundamentals/surface.html","/tutorials/fundamentals/tracks.html","/tutorials/fundamentals/vectors.html"],"href":"/tutorials/start_index.html","text":"Getting Started"},"/tutorials/fundamentals/vectors.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/vectors.html","text":"vectors layer tutorial"},"/tutorials/fundamentals/tracks.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/tracks.html","text":"tracks layer tutorial"},"/tutorials/fundamentals/surface.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/surface.html","text":"surface layer tutorial"},"/tutorials/fundamentals/shapes.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/shapes.html","text":"shapes layer tutorial"},"/tutorials/fundamentals/points.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/points.html","text":"points layer tutorial"},"/tutorials/fundamentals/labels.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/labels.html","text":"labels layer tutorial"},"/tutorials/fundamentals/image.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/image.html","text":"image layer tutorial"},"/tutorials/fundamentals/viewer.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/viewer.html","text":"napari viewer tutorial"},"/tutorials/fundamentals/getting_started.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/getting_started.html","text":"Getting started with napari"},"/tutorials/fundamentals/installation.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/installation.html","text":"How to install napari on your machine"}},"rootGlobalHeaders":["/tutorials/start_index.html","/tutorials/index.html","/howtos/index.html","/guides/stable/index.html","/plugins/stable/index.html","/community/index.html","/api/stable/index.html","/developers/index.html","/glossary.html","/release/index.html","/roadmaps/index.html","https://github.com/napari/napari","https://napari-hub.org"],"pageTitle":"Contribution Guides","pageFrontMatter":{},"previewImage":"","previewDescription":"This page provides guides on many of the plugin contribution patterns.\nEach provides a general overview of the purpose of the contribution and\nan example implementation. For details on the type and...","appScripts":[{"src":"/_static/documentation_options.js"},{"src":"/_static/jquery.js"},{"src":"/_static/underscore.js"},{"src":"/_static/doctools.js"},{"src":"/_static/togglebutton.js"},{"src":"/_static/clipboard.min.js"},{"src":"/_static/copybutton.js"},{"children":"var togglebuttonSelector = '.toggle, .admonition.dropdown, .tag_hide_input div.cell_input, .tag_hide-input div.cell_input, .tag_hide_output div.cell_output, .tag_hide-output div.cell_output, .tag_hide_cell.cell, .tag_hide-cell.cell';"},{"children":"const THEBE_JS_URL = \"https://unpkg.com/thebe@0.8.2/lib/index.js\"\nconst thebe_selector = \".thebe,.cell\"\nconst thebe_selector_input = \"pre\"\nconst thebe_selector_output = \".output, .cell_output\"\n"},{"src":"/_static/sphinx-thebe.js"}],"appStyleSheets":[{"href":"/_static/pygments.css","rel":"stylesheet"},{"href":"/_static/togglebutton.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/copybutton.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/mystnb.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/sphinx-thebe.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/panels-main.c949a650a448cc0ae9fd3441c0e17fb0.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/panels-variables.06eb56fa6e07937060861dad626602ad.css","rel":"stylesheet","type":"text/css"}],"pageBodyHtml":"\n        <div id=\"documentation_options\" data-url_root=\"../../\"></div>\n        <div class=\"section\" id=\"contribution-guides\">\n\n<p>This page provides guides on many of the plugin contribution patterns.\nEach provides a general overview of the purpose of the contribution and\nan example implementation. For details on the type and meaning of each\nfield in a specific contribution, See the\n<a class=\"reference internal\" href=\"contributions.html\"><span class=\"doc std std-doc\">contributions reference</span></a></p>\n<div class=\"section\" id=\"readers\">\n<span id=\"readers-contribution-guide\"></span><h2>Readers<a class=\"headerlink\" href=\"#readers\" title=\"Permalink to this headline\">¶</a></h2>\n<p>Reader plugins may add support for new filetypes to napari.\nThey are invoked whenever <code class=\"docutils literal notranslate\"><span class=\"pre\">viewer.open('some/path')</span></code> is used on the\ncommand line, or when a user opens a file in the graphical user interface by\ndropping a file into the canvas, or using <code class=\"docutils literal notranslate\"><span class=\"pre\">File</span> <span class=\"pre\">-&gt;</span> <span class=\"pre\">Open...</span></code></p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">command</span></code> provided by a reader contribution is expected to be a function\nthat accepts a path or a sequence of paths and either returns <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> (if it\ndoes not want to accept the given path) or returns a <em>new function</em>\n(a <code class=\"docutils literal notranslate\"><span class=\"pre\">ReaderFunction</span></code>) that is capable of doing the reading.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">ReaderFunction</span></code> will be passed the same path (or list of paths) and\nis expected to return a list of <a class=\"reference internal\" href=\"#layer-data-tuples\"><span class=\"std std-ref\">LayerData tuples</span></a>.</p>\n<div class=\"admonition-accepting-directories admonition\">\n<p class=\"admonition-title\">Accepting directories</p>\n<p>A reader may indicate that it accepts directories by\nsetting <code class=\"docutils literal notranslate\"><span class=\"pre\">contributions.readers.&lt;reader&gt;.accepts_directories</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>;\notherwise, they will not be invoked when a directory is passed to <code class=\"docutils literal notranslate\"><span class=\"pre\">viewer.open</span></code>.</p>\n</div>\n<div class=\"section\" id=\"reader-example\">\n<h3>Reader example<a class=\"headerlink\" href=\"#reader-example\" title=\"Permalink to this headline\">¶</a></h3>\n<div class=\"tabbed-set docutils\">\n<input checked=\"checked\" id=\"d92e2bea-31cc-4b6d-a328-40498dac5cbc\" name=\"d2d0a155-e42b-4b3e-a893-8534580ed85e\" type=\"radio\">\n<label class=\"tabbed-label\" for=\"d92e2bea-31cc-4b6d-a328-40498dac5cbc\">\nnpe2</label><div class=\"tabbed-content docutils\">\n<p><strong>python implementation</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># example_plugin.some_module</span>\n<span class=\"n\">PathLike</span> <span class=\"o\">=</span> <span class=\"nb\">str</span>\n<span class=\"n\">PathOrPaths</span> <span class=\"o\">=</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">PathLike</span><span class=\"p\">,</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">PathLike</span><span class=\"p\">]]</span>\n<span class=\"n\">ReaderFunction</span> <span class=\"o\">=</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">PathOrPaths</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">LayerData</span><span class=\"p\">]]</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">get_reader</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">PathOrPaths</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ReaderFunction</span><span class=\"p\">]:</span>\n    <span class=\"c1\"># If we recognize the format, we return the actual reader function</span>\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s2\">\".xyz\"</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">xyz_file_reader</span>\n    <span class=\"c1\"># otherwise we return None.</span>\n    <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">xyz_file_reader</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">PathOrPaths</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">LayerData</span><span class=\"p\">]:</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"o\">...</span>  <span class=\"c1\"># somehow read data from path</span>\n    <span class=\"n\">layer_attributes</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"etc...\"</span><span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"p\">[(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">layer_attributes</span><span class=\"p\">)]</span>\n</pre></div>\n</div>\n<p><strong>manifest</strong></p>\n<p>See <a class=\"reference external\" href=\"./contributions.html#contributions-readers\" target=\"_blank\" rel=\"noreferrer\">Readers contribution reference</a>\nfor field details.</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">contributions</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">commands</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">id</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example-plugin.read_xyz</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">title</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Read \".xyz\" files</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">python_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example_plugin.some_module:get_reader</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">readers</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">command</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example-plugin.read_xyz</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">filename_patterns</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"s\">'*.xyz'</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">accepts_directories</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">false</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n<input id=\"7f4b71be-2243-4592-bf17-3f25c4b819b6\" name=\"d2d0a155-e42b-4b3e-a893-8534580ed85e\" type=\"radio\">\n<label class=\"tabbed-label\" for=\"7f4b71be-2243-4592-bf17-3f25c4b819b6\">\nnapari-plugin-engine</label><div class=\"tabbed-content docutils\">\n<div class=\"admonition-deprecated admonition\">\n<p class=\"admonition-title\">Deprecated!</p>\n<p>This demonstrates the now-deprecated <code class=\"docutils literal notranslate\"><span class=\"pre\">napari-plugin-engine</span></code> pattern.</p>\n</div>\n<p><strong>python implementation</strong></p>\n<p><a class=\"reference external\" href=\"https://napari.org/plugins/stable/npe1.html#napari.plugins.hook_specifications.napari_get_reader\" target=\"_blank\" rel=\"noreferrer\">hook specification</a></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">napari_plugin_engine</span> <span class=\"kn\">import</span> <span class=\"n\">napari_hook_implementation</span>\n\n\n<span class=\"nd\">@napari_hook_implementation</span>\n<span class=\"k\">def</span> <span class=\"nf\">napari_get_reader</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">PathOrPaths</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ReaderFunction</span><span class=\"p\">]:</span>\n    <span class=\"c1\"># If we recognize the format, we return the actual reader function</span>\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s2\">\".xyz\"</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">xyz_file_reader</span>\n    <span class=\"c1\"># otherwise we return None.</span>\n    <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">xyz_file_reader</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">PathOrPaths</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">LayerData</span><span class=\"p\">]:</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"o\">...</span>  <span class=\"c1\"># somehow read data from path</span>\n    <span class=\"n\">layer_properties</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"etc...\"</span><span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"p\">[(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">layer_properties</span><span class=\"p\">)]</span>\n</pre></div>\n</div>\n</div>\n</div>\n<hr class=\"docutils\">\n</div>\n</div>\n<div class=\"section\" id=\"writers\">\n<span id=\"writers-contribution-guide\"></span><h2>Writers<a class=\"headerlink\" href=\"#writers\" title=\"Permalink to this headline\">¶</a></h2>\n<p>Writer plugins add support for exporting data from napari.\nThey are invoked whenever <code class=\"docutils literal notranslate\"><span class=\"pre\">viewer.layers.save('some/path.ext')</span></code>\nis used on the command line, or when a user requests to save one\nor more layers in the graphical user interface with\n<code class=\"docutils literal notranslate\"><span class=\"pre\">File</span> <span class=\"pre\">-&gt;</span> <span class=\"pre\">Save</span> <span class=\"pre\">Selected</span> <span class=\"pre\">Layer(s)...</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">Save</span> <span class=\"pre\">All</span> <span class=\"pre\">Layers...</span></code></p>\n<div class=\"admonition important\">\n<p class=\"admonition-title\">Important</p>\n<p>This guide describes the second generation (<code class=\"docutils literal notranslate\"><span class=\"pre\">npe2</span></code>) plugin specification.\nNew plugins should no longer use the old <code class=\"docutils literal notranslate\"><span class=\"pre\">napari_get_writer</span></code> hook\nspecification from the first generation <code class=\"docutils literal notranslate\"><span class=\"pre\">napari_plugin_engine</span></code>.</p>\n</div>\n<div class=\"section\" id=\"writer-plugin-function-signatures\">\n<h3>Writer plugin function signatures<a class=\"headerlink\" href=\"#writer-plugin-function-signatures\" title=\"Permalink to this headline\">¶</a></h3>\n<p>Writer plugins are <em>functions</em> that:</p>\n<ol class=\"simple\">\n<li><p>Accept a destination path and data from one or more layers in the viewer</p></li>\n<li><p>Write layer data and associated attributes to disk</p></li>\n<li><p>Return a list of strings containing the path(s) that were successfully written.</p></li>\n</ol>\n<p>They must follow one of two calling conventions (where the convention used\nis determined by the <a class=\"reference external\" href=\"#layer-type-constraints\" target=\"_blank\" rel=\"noreferrer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">layer_type</span></code> constraints</a> provided\nby the corresponding writer contribution in the manifest).</p>\n<div class=\"section\" id=\"single-layer-writer\">\n<h4>1. single-layer writer<a class=\"headerlink\" href=\"#single-layer-writer\" title=\"Permalink to this headline\">¶</a></h4>\n<p>Single-layer writers will receive a <strong>path</strong>, layer <strong>data</strong>, and a <code class=\"docutils literal notranslate\"><span class=\"pre\">dict</span></code> of layer\n<strong>attributes</strong>, (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">{'name':</span> <span class=\"pre\">'My</span> <span class=\"pre\">Layer',</span> <span class=\"pre\">'opacity':</span> <span class=\"pre\">0.6}</span></code>)</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">single_layer_writer</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">attributes</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>The formal type is as follows:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">DataType</span> <span class=\"o\">=</span> <span class=\"n\">Any</span>  <span class=\"c1\"># usually something like a numpy array, but varies by layer</span>\n<span class=\"n\">LayerAttributes</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span>\n<span class=\"n\">SingleWriterFunction</span> <span class=\"o\">=</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">DataType</span><span class=\"p\">,</span> <span class=\"n\">LayerAttributes</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"multi-layer-writer\">\n<h4>2. multi-layer writer<a class=\"headerlink\" href=\"#multi-layer-writer\" title=\"Permalink to this headline\">¶</a></h4>\n<p>Multi-layer writers will receive a <strong>path</strong>, and a list of full\n<a class=\"reference internal\" href=\"#layer-data-tuples\"><span class=\"std std-ref\">layer data tuples</span></a>.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">multi_layer_writer</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">layer_data</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">FullLayerData</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>The formal type is as follows:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">DataType</span> <span class=\"o\">=</span> <span class=\"n\">Any</span>  <span class=\"c1\"># usually something like a numpy array, but varies by layer</span>\n<span class=\"n\">LayerAttributes</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span>\n<span class=\"n\">LayerName</span> <span class=\"o\">=</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s2\">\"image\"</span><span class=\"p\">,</span> <span class=\"s2\">\"labels\"</span><span class=\"p\">,</span> <span class=\"s2\">\"points\"</span><span class=\"p\">,</span> <span class=\"s2\">\"shapes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"surface\"</span><span class=\"p\">,</span> <span class=\"s2\">\"tracks\"</span><span class=\"p\">,</span> <span class=\"s2\">\"vectors\"</span><span class=\"p\">]</span>\n<span class=\"n\">FullLayerData</span> <span class=\"o\">=</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">DataType</span><span class=\"p\">,</span> <span class=\"n\">LayerAttributes</span><span class=\"p\">,</span> <span class=\"n\">LayerName</span><span class=\"p\">]</span>\n<span class=\"n\">MultiWriterFunction</span> <span class=\"o\">=</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">FullLayerData</span><span class=\"p\">]],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"layer-type-constraints\">\n<h3>Layer type constraints<a class=\"headerlink\" href=\"#layer-type-constraints\" title=\"Permalink to this headline\">¶</a></h3>\n<p>Individual writer contributions are determined to be <strong>single-layer writers</strong> or\n<strong>multi-layer writers</strong> based on their <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">writer.layer_types</span></code></strong> constraints\nprovided in the <a class=\"reference external\" href=\"./contributions.html#contributions-writers\" target=\"_blank\" rel=\"noreferrer\">contribution metadata</a>.</p>\n<p>A writer plugin declares that it can accept between <em>m</em> and <em>n</em> layers of a\nspecific <em>type</em> (where <em>0 ≤ m ≤ n</em>), using regex-like syntax with the special\ncharacters <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">?</span></code></strong>, <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">+</span></code></strong> and <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">*</span></code></strong>:</p>\n<ul class=\"simple\">\n<li><p><strong><code class=\"docutils literal notranslate\"><span class=\"pre\">image</span></code></strong>: Writes exactly 1 image layer.</p></li>\n<li><p><strong><code class=\"docutils literal notranslate\"><span class=\"pre\">image?</span></code></strong>: Writes 0 or 1 image layers.</p></li>\n<li><p><strong><code class=\"docutils literal notranslate\"><span class=\"pre\">image+</span></code></strong>: Writes 1 or more image layers.</p></li>\n<li><p><strong><code class=\"docutils literal notranslate\"><span class=\"pre\">image*</span></code></strong>: Writes 0 or more image layers.</p></li>\n<li><p><strong><code class=\"docutils literal notranslate\"><span class=\"pre\">image{k}</span></code></strong>: Writes exactly k image layers.</p></li>\n<li><p><strong><code class=\"docutils literal notranslate\"><span class=\"pre\">image{m,n}</span></code></strong>: Writes between <em>m</em> and <em>n</em> layers (inclusive range). Must have <em>m &lt;= n</em>.</p></li>\n</ul>\n<p>A writer plugin will <em>only</em> be invoked when its <code class=\"docutils literal notranslate\"><span class=\"pre\">layer_types</span></code> constraint is\ncompatible with the layer type(s) that the user is saving. When a type is not\npresent in the list of constraints, it is assumed the writer is <strong>not</strong>\ncompatible with that type.</p>\n<p><strong>Consider this example contributions section in a manifest:</strong></p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">contributions</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">writers</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">command</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example-plugin.some_writer</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">layer_types</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">[</span><span class=\"s\">\"image+\"</span><span class=\"p p-Indicator\">,</span><span class=\"w\"> </span><span class=\"s\">\"points?\"</span><span class=\"p p-Indicator\">]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">filename_extensions</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">[</span><span class=\"s\">\".ext\"</span><span class=\"p p-Indicator\">]</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>This writer would be considered when 1 or more <code class=\"docutils literal notranslate\"><span class=\"pre\">Image</span></code> layers and 0 or 1\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Points</span></code> layers are selected (i.e. the <code class=\"docutils literal notranslate\"><span class=\"pre\">Points</span></code> layer is optional). This\nwriter would <em>not</em> be selected when the user tries to save an <code class=\"docutils literal notranslate\"><span class=\"pre\">image</span></code>\nand a <code class=\"docutils literal notranslate\"><span class=\"pre\">vectors</span></code> layer, because <code class=\"docutils literal notranslate\"><span class=\"pre\">vectors</span></code> is not listed in the <code class=\"docutils literal notranslate\"><span class=\"pre\">layer_types</span></code>.</p>\n</div>\n<div class=\"section\" id=\"writer-example\">\n<h3>Writer example<a class=\"headerlink\" href=\"#writer-example\" title=\"Permalink to this headline\">¶</a></h3>\n<div class=\"tabbed-set docutils\">\n<input checked=\"checked\" id=\"1c125686-1008-4966-914b-ad15a837421d\" name=\"760fe6ae-b4e7-4b36-abd1-57aba17f21ed\" type=\"radio\">\n<label class=\"tabbed-label\" for=\"1c125686-1008-4966-914b-ad15a837421d\">\nnpe2</label><div class=\"tabbed-content docutils\">\n<p><strong>python implementation</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># example_plugin.some_module</span>\n<span class=\"k\">def</span> <span class=\"nf\">write_points</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">layer_data</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">attributes</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"s2\">\"w\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fh</span><span class=\"p\">:</span>\n        <span class=\"o\">...</span>  <span class=\"c1\"># save layer_data and attributes to file</span>\n\n    <span class=\"c1\"># return path to any file(s) that were successfully written</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">path</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p><strong>manifest</strong></p>\n<p>See <a class=\"reference external\" href=\"./contributions.html#contributions-writers\" target=\"_blank\" rel=\"noreferrer\">Writers contribution reference</a>\nfor field details.</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">contributions</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">commands</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">id</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example-plugin.write_points</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">title</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Save points layer to csv</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">python_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example_plugin.some_module:write_points</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">writers</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">command</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example-plugin.write_points</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">layer_types</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">points</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">filename_extensions</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">.csv</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n<input id=\"ad9388f7-6fda-4f74-b7c1-73245f548ebe\" name=\"760fe6ae-b4e7-4b36-abd1-57aba17f21ed\" type=\"radio\">\n<label class=\"tabbed-label\" for=\"ad9388f7-6fda-4f74-b7c1-73245f548ebe\">\nnapari-plugin-engine</label><div class=\"tabbed-content docutils\">\n<div class=\"admonition-deprecated admonition\">\n<p class=\"admonition-title\">Deprecated!</p>\n<p>This demonstrates the now-deprecated <code class=\"docutils literal notranslate\"><span class=\"pre\">napari-plugin-engine</span></code> pattern.</p>\n</div>\n<p><strong>python implementation</strong></p>\n<p><a class=\"reference external\" href=\"https://napari.org/plugins/stable/npe1.html#single-layers-io\" target=\"_blank\" rel=\"noreferrer\">hook specification</a></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">napari_plugin_engine</span> <span class=\"kn\">import</span> <span class=\"n\">napari_hook_implementation</span>\n\n<span class=\"nd\">@napari_hook_implementation</span>\n<span class=\"k\">def</span> <span class=\"nf\">napari_write_points</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">meta</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n    <span class=\"sd\">\"\"\"Write points data and metadata into a path.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    path : str</span>\n<span class=\"sd\">        Path to file, directory, or resource (like a URL).</span>\n<span class=\"sd\">    data : array (N, D)</span>\n<span class=\"sd\">        Points layer data</span>\n<span class=\"sd\">    meta : dict</span>\n<span class=\"sd\">        Points metadata.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    path : str or None</span>\n<span class=\"sd\">        If data is successfully written, return the ``path`` that was written.</span>\n<span class=\"sd\">        Otherwise, if nothing was done, return ``None``.</span>\n<span class=\"sd\">    \"\"\"</span>\n</pre></div>\n</div>\n</div>\n</div>\n<hr class=\"docutils\">\n</div>\n</div>\n<div class=\"section\" id=\"widgets\">\n<span id=\"widgets-contribution-guide\"></span><h2>Widgets<a class=\"headerlink\" href=\"#widgets\" title=\"Permalink to this headline\">¶</a></h2>\n<p>Widget plugins allow developers to contribute novel graphical\nelements (aka “widgets”) to the user interface.  These widgets can request\naccess to the viewer instance in which they are docked, enabling a broad\nrange of functionality: essentially, anything that can be done with the\nnapari <code class=\"docutils literal notranslate\"><span class=\"pre\">Viewer</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">Layer</span></code> APIs can be accomplished with widgets.</p>\n<div class=\"admonition important\">\n<p class=\"admonition-title\">Important</p>\n<p>Because this is a powerful and open-ended plugin specification, we\nask that plugin developers take additional care when providing widget plugins.\nMake sure to only use public methods on the <code class=\"docutils literal notranslate\"><span class=\"pre\">viewer</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">layer</span></code> instances.\nAlso, be mindful of the fact that the user may be using your plugin along with\nother plugins or workflows: try to only modify layers added by your plugin, or\nspecifically requested by the user.</p>\n</div>\n<p>The widget specification requires that the plugin provide napari with a\n<em>callable</em> object that, when called, returns an <em>instance</em> of a widget\n(where a “widget” is an instance of <code class=\"docutils literal notranslate\"><span class=\"pre\">QtWidgets.QWidget</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">magicgui.widgets.Widget</span></code>).</p>\n<p>There are a few commonly used patterns that fulfill this <code class=\"docutils literal notranslate\"><span class=\"pre\">Callable[...,</span> <span class=\"pre\">Widget]</span></code>\nspecification:</p>\n<ol>\n<li><p>Provide a <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span></code> object directly, such as a <code class=\"docutils literal notranslate\"><span class=\"pre\">QtWidgets.QWidget</span></code> or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">magicgui.widgets.Widget</span></code> subclass:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">qtpy.QtWidgets</span> <span class=\"kn\">import</span> <span class=\"n\">QWidget</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyPluginWidget</span><span class=\"p\">(</span><span class=\"n\">QWidget</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">viewer</span><span class=\"p\">:</span> <span class=\"s1\">'napari.viewer.Viewer'</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_viewer</span> <span class=\"o\">=</span> <span class=\"n\">viewer</span>\n</pre></div>\n</div>\n</li>\n<li><p>Provide a wrapper function, or <code class=\"docutils literal notranslate\"><span class=\"pre\">magicgui.magic_factory</span></code> object:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">magicgui</span> <span class=\"kn\">import</span> <span class=\"n\">magic_factory</span>\n\n<span class=\"nd\">@magic_factory</span>\n<span class=\"k\">def</span> <span class=\"nf\">create_widget</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">:</span> <span class=\"s1\">'napari.types.ImageData'</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"s1\">'napari.types.ImageData'</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p><em>(reminder, in the example above, each time the <code class=\"docutils literal notranslate\"><span class=\"pre\">magic_factory</span></code>-decorated\n<code class=\"docutils literal notranslate\"><span class=\"pre\">create_widget()</span></code> function is called, it returns a new widget instance ––\njust as we need for the widget specification.)</em></p>\n</li>\n<li><p>Lastly, you can provide an arbitrary function and request that napari\nautogenerate a widget using <code class=\"docutils literal notranslate\"><span class=\"pre\">magicgui.magicgui</span></code>.  In the first generation\n<code class=\"docutils literal notranslate\"><span class=\"pre\">napari_plugin_engine</span></code>, this was the <code class=\"docutils literal notranslate\"><span class=\"pre\">napari_experimental_provide_function</span></code>\nhook specification.  In the new <code class=\"docutils literal notranslate\"><span class=\"pre\">npe2</span></code> pattern, one uses the <code class=\"docutils literal notranslate\"><span class=\"pre\">autogenerate</span></code>\nfield in the <a class=\"reference external\" href=\"./contributions.html#contributions-widgets\" target=\"_blank\" rel=\"noreferrer\">WidgetContribution</a>.</p></li>\n</ol>\n<div class=\"section\" id=\"widget-example\">\n<h3>Widget example<a class=\"headerlink\" href=\"#widget-example\" title=\"Permalink to this headline\">¶</a></h3>\n<div class=\"tabbed-set docutils\">\n<input checked=\"checked\" id=\"c87afeab-3e3f-4bd2-b9a7-30d6de595664\" name=\"e1acb7f3-2ac1-4334-9974-2a397072a826\" type=\"radio\">\n<label class=\"tabbed-label\" for=\"c87afeab-3e3f-4bd2-b9a7-30d6de595664\">\nnpe2</label><div class=\"tabbed-content docutils\">\n<p><strong>python implementation</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># example_plugin.some_module</span>\n<span class=\"n\">Widget</span> <span class=\"o\">=</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"s2\">\"magicgui.widgets.Widget\"</span><span class=\"p\">,</span> <span class=\"s2\">\"qtpy.QtWidgets.QWidget\"</span><span class=\"p\">]</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyWidget</span><span class=\"p\">(</span><span class=\"n\">QWidget</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Any QtWidgets.QWidget or magicgui.widgets.Widget subclass can be used.\"\"\"</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">viewer</span><span class=\"p\">:</span> <span class=\"s2\">\"napari.viewer.Viewer\"</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">parent</span><span class=\"p\">)</span>\n        <span class=\"o\">...</span>\n\n<span class=\"nd\">@magic_factory</span>\n<span class=\"k\">def</span> <span class=\"nf\">widget_factory</span><span class=\"p\">(</span>\n    <span class=\"n\">image</span><span class=\"p\">:</span> <span class=\"s2\">\"napari.types.ImageData\"</span><span class=\"p\">,</span> <span class=\"n\">threshold</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"s2\">\"napari.types.LabelsData\"</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Generate thresholded image.</span>\n\n<span class=\"sd\">    This pattern uses magicgui.magic_factory directly to turn a function</span>\n<span class=\"sd\">    into a callable that returns a widget.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">image</span> <span class=\"o\">&gt;</span> <span class=\"n\">threshold</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">threshold</span><span class=\"p\">(</span>\n    <span class=\"n\">image</span><span class=\"p\">:</span> <span class=\"s2\">\"napari.types.ImageData\"</span><span class=\"p\">,</span> <span class=\"n\">threshold</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"s2\">\"napari.types.LabelsData\"</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Generate thresholded image.</span>\n\n<span class=\"sd\">    This function will be turned into a widget using `autogenerate: true`.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">image</span> <span class=\"o\">&gt;</span> <span class=\"n\">threshold</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p><strong>manifest</strong></p>\n<p>See <a class=\"reference external\" href=\"./contributions.html#contributions-widgets\" target=\"_blank\" rel=\"noreferrer\">Widgets contribution reference</a>\nfor field details.</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">contributions</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">commands</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">id</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example-plugin.my_widget</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">title</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Open my widget</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">python_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example_plugin.some_module:MyWidget</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">id</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example-plugin.threshold_widget</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">title</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Make threshold widget with magic_factory</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">python_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example_plugin.some_module:widget_factory</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">id</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example-plugin.do_threshold</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">title</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Perform threshold on image, return new image</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">python_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example_plugin.some_module:threshold</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">widgets</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">command</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example-plugin.my_widget</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">display_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Wizard</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">command</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example-plugin.threshold_widget</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">display_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Threshold</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">command</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example-plugin.do_threshold</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">display_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Threshold</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">autogenerate</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">true</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n<input id=\"45095608-6613-46fd-91fd-a1d2909b354c\" name=\"e1acb7f3-2ac1-4334-9974-2a397072a826\" type=\"radio\">\n<label class=\"tabbed-label\" for=\"45095608-6613-46fd-91fd-a1d2909b354c\">\nnapari-plugin-engine</label><div class=\"tabbed-content docutils\">\n<div class=\"admonition-deprecated admonition\">\n<p class=\"admonition-title\">Deprecated!</p>\n<p>This demonstrates the now-deprecated <code class=\"docutils literal notranslate\"><span class=\"pre\">napari-plugin-engine</span></code> pattern.</p>\n</div>\n<p><strong>python implementation</strong></p>\n<p><a class=\"reference external\" href=\"https://napari.org/plugins/stable/npe1.html#napari.plugins.hook_specifications.napari_experimental_provide_dock_widget\" target=\"_blank\" rel=\"noreferrer\">hook_specification</a></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">qtpy.QtWidgets</span> <span class=\"kn\">import</span> <span class=\"n\">QWidget</span>\n<span class=\"kn\">from</span> <span class=\"nn\">napari_plugin_engine</span> <span class=\"kn\">import</span> <span class=\"n\">napari_hook_implementation</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AnimationWizard</span><span class=\"p\">(</span><span class=\"n\">QWidget</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">viewer</span><span class=\"p\">:</span> <span class=\"s2\">\"napari.viewer.Viewer\"</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">parent</span><span class=\"p\">)</span>\n        <span class=\"o\">...</span>\n\n\n<span class=\"nd\">@magic_factory</span>\n<span class=\"k\">def</span> <span class=\"nf\">widget_factory</span><span class=\"p\">(</span>\n    <span class=\"n\">image</span><span class=\"p\">:</span> <span class=\"s2\">\"napari.types.ImageData\"</span><span class=\"p\">,</span> <span class=\"n\">threshold</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"s2\">\"napari.types.LabelsData\"</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Generate thresholded image.</span>\n\n<span class=\"sd\">    This pattern uses magicgui.magic_factory directly to turn a function</span>\n<span class=\"sd\">    into a callable that returns a widget.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">image</span> <span class=\"o\">&gt;</span> <span class=\"n\">threshold</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">threshold</span><span class=\"p\">(</span>\n    <span class=\"n\">image</span><span class=\"p\">:</span> <span class=\"s2\">\"napari.types.ImageData\"</span><span class=\"p\">,</span> <span class=\"n\">threshold</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"s2\">\"napari.types.LabelsData\"</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Generate thresholded image.</span>\n\n<span class=\"sd\">    This function will be turned into a widget using `autogenerate: true`.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">image</span> <span class=\"o\">&gt;</span> <span class=\"n\">threshold</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># in the first generation plugin engine, these widgets were declared</span>\n<span class=\"c1\"># using special `napari_hook_implementation`-decorated functions.</span>\n\n<span class=\"nd\">@napari_hook_implementation</span>\n<span class=\"k\">def</span> <span class=\"nf\">napari_experimental_provide_dock_widget</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">AnimationWizard</span><span class=\"p\">,</span> <span class=\"n\">widget_factory</span><span class=\"p\">]</span>\n\n\n<span class=\"nd\">@napari_hook_implementation</span>\n<span class=\"k\">def</span> <span class=\"nf\">napari_experimental_provide_function</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">threshold</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</div>\n</div>\n<hr class=\"docutils\">\n</div>\n</div>\n<div class=\"section\" id=\"sample-data\">\n<span id=\"sample-data-contribution-guide\"></span><h2>Sample Data<a class=\"headerlink\" href=\"#sample-data\" title=\"Permalink to this headline\">¶</a></h2>\n<p>This contribution point allows plugin developers to contribute sample data\nthat will be accessible in the napari interface via the <code class=\"docutils literal notranslate\"><span class=\"pre\">File</span> <span class=\"pre\">&gt;</span> <span class=\"pre\">Open</span> <span class=\"pre\">Sample</span></code>\nmenu, or via the command line with <code class=\"docutils literal notranslate\"><span class=\"pre\">viewer.open_sample</span></code>.</p>\n<p>Sample data can be useful for demonstrating the functionality of a given plugin.\nIt can take the form of a <strong>Sample Data URI</strong> that points to a static resource\n(such as a file included in the plugin distribution, or a remote resource),\nor <strong>Sample Data Function</strong> that generates layer data on demand.</p>\n<div class=\"section\" id=\"sample-data-example\">\n<h3>Sample Data example<a class=\"headerlink\" href=\"#sample-data-example\" title=\"Permalink to this headline\">¶</a></h3>\n<div class=\"tabbed-set docutils\">\n<input checked=\"checked\" id=\"5257dbd8-41e2-4c9d-a503-d191e7dcf314\" name=\"15a9d4a6-b0a6-40c5-af92-b593117d5a40\" type=\"radio\">\n<label class=\"tabbed-label\" for=\"5257dbd8-41e2-4c9d-a503-d191e7dcf314\">\nnpe2</label><div class=\"tabbed-content docutils\">\n<p><strong>python implementation</strong></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># example_plugin.some_module</span>\n<span class=\"k\">def</span> <span class=\"nf\">create_fractal</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">LayerData</span><span class=\"p\">]:</span>\n    <span class=\"sd\">\"\"\"An example of a  Sample Data Function.</span>\n<span class=\"sd\">    </span>\n<span class=\"sd\">    Note: Sample Data with URIs don't need python code.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"o\">...</span>  <span class=\"c1\"># do something cool to create a fractal</span>\n    <span class=\"k\">return</span> <span class=\"p\">[(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"My cool fractal\"</span><span class=\"p\">})]</span>\n</pre></div>\n</div>\n<p><strong>manifest</strong></p>\n<p>See <a class=\"reference external\" href=\"./contributions.html#contributions-sample-data\" target=\"_blank\" rel=\"noreferrer\">Sample Data contribution reference</a>\nfor field details.</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">contributions</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">commands</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">id</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example-plugin.data.fractal</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">title</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Create fractal image</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">python_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example_plugin.some_module:create_fractal</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">sample_data</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">fractal</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">display_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Fractal</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">command</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">example-plugin.data.fractal</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p p-Indicator\">-</span><span class=\"w\"> </span><span class=\"nt\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">napari</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">display_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Tabueran Kiribati</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">uri</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">https://en.wikipedia.org/wiki/Napari#/media/File:Tabuaeran_Kiribati.jpg</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n<input id=\"7edfd26b-c6ea-4e14-b533-a4219ff7faac\" name=\"15a9d4a6-b0a6-40c5-af92-b593117d5a40\" type=\"radio\">\n<label class=\"tabbed-label\" for=\"7edfd26b-c6ea-4e14-b533-a4219ff7faac\">\nnapari-plugin-engine</label><div class=\"tabbed-content docutils\">\n<div class=\"admonition-deprecated admonition\">\n<p class=\"admonition-title\">Deprecated!</p>\n<p>This demonstrates the now-deprecated <code class=\"docutils literal notranslate\"><span class=\"pre\">napari-plugin-engine</span></code> pattern.</p>\n</div>\n<p><strong>python implementation</strong></p>\n<p><a class=\"reference external\" href=\"https://napari.org/plugins/stable/npe1.html#napari.plugins.hook_specifications.napari_provide_sample_data\" target=\"_blank\" rel=\"noreferrer\">hook specification</a></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">napari_plugin_engine</span> <span class=\"kn\">import</span> <span class=\"n\">napari_hook_implementation</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">_generate_random_data</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">512</span><span class=\"p\">,</span> <span class=\"mi\">512</span><span class=\"p\">)):</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"p\">[(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'random data'</span><span class=\"p\">})]</span>\n\n<span class=\"nd\">@napari_hook_implementation</span>\n<span class=\"k\">def</span> <span class=\"nf\">napari_provide_sample_data</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'random data'</span><span class=\"p\">:</span> <span class=\"n\">_generate_random_data</span><span class=\"p\">,</span>\n        <span class=\"s1\">'random image'</span><span class=\"p\">:</span> <span class=\"s1\">'https://picsum.photos/1024'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'sample_key'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'display_name'</span><span class=\"p\">:</span> <span class=\"s1\">'Some Random Data (512 x 512)'</span>\n            <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"n\">_generate_random_data</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n</pre></div>\n</div>\n</div>\n</div>\n<hr class=\"docutils\">\n</div>\n</div>\n<div class=\"section\" id=\"the-layerdata-tuple\">\n<span id=\"layer-data-tuples\"></span><h2>The LayerData tuple<a class=\"headerlink\" href=\"#the-layerdata-tuple\" title=\"Permalink to this headline\">¶</a></h2>\n<p>When transfering data to and from plugins, napari does not pass <code class=\"docutils literal notranslate\"><span class=\"pre\">Layer</span></code> objects\ndirectly. Instead, it passes (mostly) pure-python and array-like types,\ndeconstructed into a <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#tuple\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">tuple</span></code></a> that we refer to as a <code class=\"docutils literal notranslate\"><span class=\"pre\">LayerData</span></code> tuple.  This type shows\nup often in plugins and is explained here.</p>\n<div class=\"section\" id=\"informal-description\">\n<h3>Informal description<a class=\"headerlink\" href=\"#informal-description\" title=\"Permalink to this headline\">¶</a></h3>\n<div class=\"highlight-py notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">attributes</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">layer_type</span><span class=\"p\">]])</span>\n</pre></div>\n</div>\n<p>A <code class=\"docutils literal notranslate\"><span class=\"pre\">LayerData</span></code> tuple is a tuple of length 1, 2, or 3 whose items, in order, are:</p>\n<ol class=\"simple\">\n<li><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">data</span></code> object that would be used for <code class=\"docutils literal notranslate\"><span class=\"pre\">layer.data</span></code> (such as a numpy array\nfor the <code class=\"docutils literal notranslate\"><span class=\"pre\">Image</span></code> layer)</p></li>\n<li><p><em>(Optional).</em> A <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dict</span></code></a> of layer attributes, suitable for passing as\nkeyword arguments to the corresponding layer constructor (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">{'opacity':</span> <span class=\"pre\">0.7}</span></code>)</p></li>\n<li><p><em>(Optional).</em> A lower case <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a> indicating the layer type (e.g.<code class=\"docutils literal notranslate\"><span class=\"pre\">'image'</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'labels'</span></code>, etc…).  If not provided (i.e. if the tuple is only of length 2), the\nlayer type is assumed to be <code class=\"docutils literal notranslate\"><span class=\"pre\">'image</span></code>’.</p></li>\n</ol>\n</div>\n<div class=\"section\" id=\"formal-type-definition\">\n<h3>Formal type definition<a class=\"headerlink\" href=\"#formal-type-definition\" title=\"Permalink to this headline\">¶</a></h3>\n<p>Formally, the typing for <code class=\"docutils literal notranslate\"><span class=\"pre\">LayerData</span></code> looks like this:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">LayerData</span> <span class=\"o\">=</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">DataType</span><span class=\"p\">],</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">DataType</span><span class=\"p\">,</span> <span class=\"n\">LayerProps</span><span class=\"p\">],</span> <span class=\"n\">FullLayerData</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>where …</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Literal</span><span class=\"p\">,</span> <span class=\"n\">Protocol</span><span class=\"p\">,</span> <span class=\"n\">Sequence</span>\n\n<span class=\"n\">LayerTypeName</span> <span class=\"o\">=</span> <span class=\"n\">Literal</span><span class=\"p\">[</span>\n    <span class=\"s2\">\"image\"</span><span class=\"p\">,</span> <span class=\"s2\">\"labels\"</span><span class=\"p\">,</span> <span class=\"s2\">\"points\"</span><span class=\"p\">,</span> <span class=\"s2\">\"shapes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"surface\"</span><span class=\"p\">,</span> <span class=\"s2\">\"tracks\"</span><span class=\"p\">,</span> <span class=\"s2\">\"vectors\"</span>\n<span class=\"p\">]</span>\n<span class=\"n\">LayerProps</span> <span class=\"o\">=</span> <span class=\"n\">Dict</span>\n<span class=\"n\">DataType</span> <span class=\"o\">=</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">ArrayLike</span><span class=\"p\">,</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">ArrayLike</span><span class=\"p\">]]</span>\n<span class=\"n\">FullLayerData</span> <span class=\"o\">=</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">DataType</span><span class=\"p\">,</span> <span class=\"n\">LayerProps</span><span class=\"p\">,</span> <span class=\"n\">LayerTypeName</span><span class=\"p\">]</span>\n<span class=\"n\">LayerData</span> <span class=\"o\">=</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">DataType</span><span class=\"p\">],</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">DataType</span><span class=\"p\">,</span> <span class=\"n\">LayerProps</span><span class=\"p\">],</span> <span class=\"n\">FullLayerData</span><span class=\"p\">]</span>\n\n\n<span class=\"c1\"># where \"ArrayLike\" is very roughly ...</span>\n<span class=\"k\">class</span> <span class=\"nc\">ArrayLike</span><span class=\"p\">(</span><span class=\"n\">Protocol</span><span class=\"p\">):</span>\n    <span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n    <span class=\"n\">ndim</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n    <span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dtype</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__array__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">:</span> <span class=\"o\">...</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__getitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ArrayLike</span><span class=\"p\">:</span> <span class=\"o\">...</span>\n\n<span class=\"c1\"># the main point is that we're more concerned with structural</span>\n<span class=\"c1\"># typing than literal array types (e.g. numpy, dask, xarray, etc...)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"examples\">\n<h3>Examples<a class=\"headerlink\" href=\"#examples\" title=\"Permalink to this headline\">¶</a></h3>\n<p>Assume that <code class=\"docutils literal notranslate\"><span class=\"pre\">data</span></code> is a numpy array:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>All of the following are valid <code class=\"docutils literal notranslate\"><span class=\"pre\">LayerData</span></code> tuples:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># the first three are equivalent, just an image array with default settings</span>\n<span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,)</span>\n<span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"p\">{})</span>\n<span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"p\">{},</span> <span class=\"s1\">'image'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># provide kwargs for image contructor</span>\n<span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'My Image'</span><span class=\"p\">,</span> <span class=\"s1\">'colormap'</span><span class=\"p\">:</span> <span class=\"s1\">'red'</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># labels layer instead of image:</span>\n<span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">),</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'My Labels'</span><span class=\"p\">,</span> <span class=\"s1\">'blending'</span><span class=\"p\">:</span> <span class=\"s1\">'additive'</span><span class=\"p\">},</span> <span class=\"s1\">'labels'</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"creation-from-a-layer-instance\">\n<h3>Creation from a <code class=\"docutils literal notranslate\"><span class=\"pre\">Layer</span></code> instance.<a class=\"headerlink\" href=\"#creation-from-a-layer-instance\" title=\"Permalink to this headline\">¶</a></h3>\n<p>Note, the <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">as_layer_data_tuple()</span></code> method will create a layer data\ntuple from a given layer</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">colormap</span><span class=\"o\">=</span><span class=\"s1\">'green'</span><span class=\"p\">,</span> <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">))</span>\n\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">as_layer_data_tuple</span><span class=\"p\">()</span>\n<span class=\"go\">Out[7]:</span>\n<span class=\"go\">(</span>\n<span class=\"go\">    array([[0.94414642, 0.89192899],</span>\n<span class=\"go\">       [0.21258344, 0.85242735]]),</span>\n<span class=\"go\">    {</span>\n<span class=\"go\">        'name': 'Image',</span>\n<span class=\"go\">        'metadata': {},</span>\n<span class=\"go\">        'scale': [4.0, 4.0],</span>\n<span class=\"go\">        'translate': [0.0, 0.0],</span>\n<span class=\"go\">        'rotate': [[1.0, 0.0], [0.0, 1.0]],</span>\n<span class=\"go\">        'shear': [0.0],</span>\n<span class=\"go\">        'opacity': 1,</span>\n<span class=\"go\">        'blending': 'translucent',</span>\n<span class=\"go\">        'visible': True,</span>\n<span class=\"go\">        'experimental_clipping_planes': [],</span>\n<span class=\"go\">        'rgb': False,</span>\n<span class=\"go\">        'multiscale': False,</span>\n<span class=\"go\">        'colormap': 'green',</span>\n<span class=\"go\">        'contrast_limits': [0.2125834437981784, 0.9441464162780605],</span>\n<span class=\"go\">        'interpolation': 'nearest',</span>\n<span class=\"go\">        'rendering': 'mip',</span>\n<span class=\"go\">        'experimental_slicing_plane': {'normal': (1.0, 0.0, 0.0), 'position': (0.0, 0.0, 0.0), 'enabled': False, 'thickness': 1.0},</span>\n<span class=\"go\">        'iso_threshold': 0.5,</span>\n<span class=\"go\">        'attenuation': 0.05,</span>\n<span class=\"go\">        'gamma': 1</span>\n<span class=\"go\">    },</span>\n<span class=\"go\">    'image'</span>\n<span class=\"go\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n</div>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            kernelName: \"python3\",\n            path: \"./plugins/stable\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>\n      ","pageHeaders":[{"href":"#readers","text":"Readers"},{"href":"#writers","text":"Writers"},{"href":"#widgets","text":"Widgets"},{"href":"#sample-data","text":"Sample Data"},{"href":"#the-layerdata-tuple","text":"The LayerData tuple"}],"ipynbSource":"","mdSource":"/_sources/plugins/stable/guides.md"}},"__N_SSG":true}