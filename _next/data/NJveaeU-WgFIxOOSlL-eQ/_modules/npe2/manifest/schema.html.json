{"pageProps":{"state":{"globalHeaders":{"https://napari-hub.org":{"level":1,"children":[],"href":"https://napari-hub.org","text":"napari hub"},"https://github.com/napari/napari":{"level":1,"children":[],"href":"https://github.com/napari/napari","text":"napari source code"},"/roadmaps/index.html":{"level":1,"children":["/roadmaps/0_4.html","/roadmaps/0_3_retrospective.html","/roadmaps/0_3.html"],"href":"/roadmaps/index.html","text":"Roadmaps"},"/roadmaps/0_3.html":{"level":2,"children":[],"href":"/roadmaps/0_3.html","text":"Roadmap 0.3"},"/roadmaps/0_3_retrospective.html":{"level":2,"children":[],"href":"/roadmaps/0_3_retrospective.html","text":"Roadmap 0.3 Retrospective"},"/roadmaps/0_4.html":{"level":2,"children":[],"href":"/roadmaps/0_4.html","text":"Roadmap 0.4"},"/release/index.html":{"level":1,"children":["/release/release_0_4_12.html","/release/release_0_4_11.html","/release/release_0_4_10.html","/release/release_0_4_9.html","/release/release_0_4_8.html","/release/release_0_4_7.html","/release/release_0_4_6.html","/release/release_0_4_5.html","/release/release_0_4_4.html","/release/release_0_4_3.html","/release/release_0_4_2.html","/release/release_0_4_1.html","/release/release_0_4_0.html","/release/release_0_3_8.html","/release/release_0_3_7.html","/release/release_0_3_6.html","/release/release_0_3_5.html","/release/release_0_3_4.html","/release/release_0_3_3.html","/release/release_0_3_2.html","/release/release_0_3_1.html","/release/release_0_3_0.html","/release/release_0_2_12.html","/release/release_0_2_11.html","/release/release_0_2_10.html","/release/release_0_2_9.html","/release/release_0_2_8.html","/release/release_0_2_7.html","/release/release_0_2_6.html","/release/release_0_2_5.html","/release/release_0_2_4.html","/release/release_0_2_3.html","/release/release_0_2_1.html","/release/release_0_2_0.html","/release/release_0_1_5.html","/release/release_0_1_3.html","/release/release_0_1_0.html","/release/release_0_4_13.html","/release/release_0_4_14.html"],"href":"/release/index.html","text":"Release notes"},"/release/release_0_4_14.html":{"level":2,"children":[],"href":"/release/release_0_4_14.html","text":"napari 0.4.14"},"/release/release_0_4_13.html":{"level":2,"children":[],"href":"/release/release_0_4_13.html","text":"napari 0.4.13"},"/release/release_0_1_0.html":{"level":2,"children":[],"href":"/release/release_0_1_0.html","text":"napari 0.1.0"},"/release/release_0_1_3.html":{"level":2,"children":[],"href":"/release/release_0_1_3.html","text":"napari 0.1.3"},"/release/release_0_1_5.html":{"level":2,"children":[],"href":"/release/release_0_1_5.html","text":"napari 0.1.5"},"/release/release_0_2_0.html":{"level":2,"children":[],"href":"/release/release_0_2_0.html","text":"napari 0.2.0"},"/release/release_0_2_1.html":{"level":2,"children":[],"href":"/release/release_0_2_1.html","text":"napari 0.2.1"},"/release/release_0_2_3.html":{"level":2,"children":[],"href":"/release/release_0_2_3.html","text":"napari 0.2.3"},"/release/release_0_2_4.html":{"level":2,"children":[],"href":"/release/release_0_2_4.html","text":"napari 0.2.4"},"/release/release_0_2_5.html":{"level":2,"children":[],"href":"/release/release_0_2_5.html","text":"napari 0.2.5"},"/release/release_0_2_6.html":{"level":2,"children":[],"href":"/release/release_0_2_6.html","text":"napari 0.2.6"},"/release/release_0_2_7.html":{"level":2,"children":[],"href":"/release/release_0_2_7.html","text":"napari 0.2.7"},"/release/release_0_2_8.html":{"level":2,"children":[],"href":"/release/release_0_2_8.html","text":"napari 0.2.8"},"/release/release_0_2_9.html":{"level":2,"children":[],"href":"/release/release_0_2_9.html","text":"napari 0.2.9"},"/release/release_0_2_10.html":{"level":2,"children":[],"href":"/release/release_0_2_10.html","text":"napari 0.2.10"},"/release/release_0_2_11.html":{"level":2,"children":[],"href":"/release/release_0_2_11.html","text":"napari 0.2.11"},"/release/release_0_2_12.html":{"level":2,"children":[],"href":"/release/release_0_2_12.html","text":"napari 0.2.12"},"/release/release_0_3_0.html":{"level":2,"children":[],"href":"/release/release_0_3_0.html","text":"napari 0.3.0"},"/release/release_0_3_1.html":{"level":2,"children":[],"href":"/release/release_0_3_1.html","text":"napari 0.3.1"},"/release/release_0_3_2.html":{"level":2,"children":[],"href":"/release/release_0_3_2.html","text":"napari 0.3.2"},"/release/release_0_3_3.html":{"level":2,"children":[],"href":"/release/release_0_3_3.html","text":"napari 0.3.3"},"/release/release_0_3_4.html":{"level":2,"children":[],"href":"/release/release_0_3_4.html","text":"napari 0.3.4"},"/release/release_0_3_5.html":{"level":2,"children":[],"href":"/release/release_0_3_5.html","text":"napari 0.3.5"},"/release/release_0_3_6.html":{"level":2,"children":[],"href":"/release/release_0_3_6.html","text":"napari 0.3.6"},"/release/release_0_3_7.html":{"level":2,"children":[],"href":"/release/release_0_3_7.html","text":"napari 0.3.7"},"/release/release_0_3_8.html":{"level":2,"children":[],"href":"/release/release_0_3_8.html","text":"napari 0.3.8"},"/release/release_0_4_0.html":{"level":2,"children":[],"href":"/release/release_0_4_0.html","text":"napari 0.4.0"},"/release/release_0_4_1.html":{"level":2,"children":[],"href":"/release/release_0_4_1.html","text":"napari 0.4.1"},"/release/release_0_4_2.html":{"level":2,"children":[],"href":"/release/release_0_4_2.html","text":"napari 0.4.2"},"/release/release_0_4_3.html":{"level":2,"children":[],"href":"/release/release_0_4_3.html","text":"napari 0.4.3"},"/release/release_0_4_4.html":{"level":2,"children":[],"href":"/release/release_0_4_4.html","text":"napari 0.4.4"},"/release/release_0_4_5.html":{"level":2,"children":[],"href":"/release/release_0_4_5.html","text":"napari 0.4.5"},"/release/release_0_4_6.html":{"level":2,"children":[],"href":"/release/release_0_4_6.html","text":"napari 0.4.6"},"/release/release_0_4_7.html":{"level":2,"children":[],"href":"/release/release_0_4_7.html","text":"napari 0.4.7"},"/release/release_0_4_8.html":{"level":2,"children":[],"href":"/release/release_0_4_8.html","text":"napari 0.4.8"},"/release/release_0_4_9.html":{"level":2,"children":[],"href":"/release/release_0_4_9.html","text":"napari 0.4.9"},"/release/release_0_4_10.html":{"level":2,"children":[],"href":"/release/release_0_4_10.html","text":"napari 0.4.10"},"/release/release_0_4_11.html":{"level":2,"children":[],"href":"/release/release_0_4_11.html","text":"napari 0.4.11"},"/release/release_0_4_12.html":{"level":2,"children":[],"href":"/release/release_0_4_12.html","text":"napari 0.4.12"},"/glossary.html":{"level":1,"children":[],"href":"/glossary.html","text":"Glossary"},"/developers/index.html":{"level":1,"children":["/developers/benchmarks.html","/developers/contributing.html","/developers/core_dev_guide.html","/developers/profiling.html","/developers/release.html","/developers/testing.html","/developers/docs.html","/developers/translations.html"],"href":"/developers/index.html","text":"Developer resources"},"/developers/translations.html":{"level":2,"children":[],"href":"/developers/translations.html","text":"Translations"},"/developers/docs.html":{"level":2,"children":[],"href":"/developers/docs.html","text":"Organization of Documentation for napari"},"/developers/testing.html":{"level":2,"children":[],"href":"/developers/testing.html","text":"Testing"},"/developers/release.html":{"level":2,"children":[],"href":"/developers/release.html","text":"Release guide"},"/developers/profiling.html":{"level":2,"children":[],"href":"/developers/profiling.html","text":"Profiling"},"/developers/core_dev_guide.html":{"level":2,"children":[],"href":"/developers/core_dev_guide.html","text":"Core Developer guide"},"/developers/contributing.html":{"level":2,"children":[],"href":"/developers/contributing.html","text":"Contributing guide"},"/developers/benchmarks.html":{"level":2,"children":[],"href":"/developers/benchmarks.html","text":"Benchmarks"},"/api/stable/index.html":{"level":1,"children":["/api/stable/napari.layers.html","/api/stable/napari.view_layers.html","/api/stable/napari.types.html","/api/stable/napari.utils.html","/api/stable/napari.plugins.html","/api/stable/napari.components.html","/api/stable/napari.qt.threading.html","/api/stable/napari.utils.perf.html","/api/stable/napari.html","/api/stable/napari.html"],"href":"/api/stable/index.html","text":"API reference"},"/api/stable/napari.html":{"level":2,"children":["/api/stable/napari.Viewer.html"],"href":"/api/stable/napari.html","text":"napari"},"/api/stable/napari.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.Viewer.html","text":"napari.Viewer"},"/api/stable/napari.utils.perf.html":{"level":2,"children":["/api/stable/napari.utils.perf.PerfEvent.html"],"href":"/api/stable/napari.utils.perf.html","text":"napari.utils.perf"},"/api/stable/napari.utils.perf.PerfEvent.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.perf.PerfEvent.html","text":"napari.utils.perf.PerfEvent"},"/api/stable/napari.qt.threading.html":{"level":2,"children":["/api/stable/napari.qt.threading.FunctionWorker.html","/api/stable/napari.qt.threading.GeneratorWorker.html","/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","/api/stable/napari.qt.threading.WorkerBase.html","/api/stable/napari.qt.threading.WorkerBaseSignals.html"],"href":"/api/stable/napari.qt.threading.html","text":"napari.qt.threading"},"/api/stable/napari.qt.threading.WorkerBaseSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBaseSignals.html","text":"napari.qt.threading.WorkerBaseSignals"},"/api/stable/napari.qt.threading.WorkerBase.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBase.html","text":"napari.qt.threading.WorkerBase"},"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","text":"napari.qt.threading.GeneratorWorkerSignals"},"/api/stable/napari.qt.threading.GeneratorWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorker.html","text":"napari.qt.threading.GeneratorWorker"},"/api/stable/napari.qt.threading.FunctionWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.FunctionWorker.html","text":"napari.qt.threading.FunctionWorker"},"/api/stable/napari.components.html":{"level":2,"children":["/api/stable/napari.components.Camera.html","/api/stable/napari.components.Dims.html","/api/stable/napari.components.LayerList.html","/api/stable/napari.components.ViewerModel.html"],"href":"/api/stable/napari.components.html","text":"napari.components"},"/api/stable/napari.components.ViewerModel.html":{"level":3,"children":[],"href":"/api/stable/napari.components.ViewerModel.html","text":"napari.components.ViewerModel"},"/api/stable/napari.components.LayerList.html":{"level":3,"children":[],"href":"/api/stable/napari.components.LayerList.html","text":"napari.components.LayerList"},"/api/stable/napari.components.Dims.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Dims.html","text":"napari.components.Dims"},"/api/stable/napari.components.Camera.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Camera.html","text":"napari.components.Camera"},"/api/stable/napari.plugins.html":{"level":2,"children":["/api/stable/napari.plugins.NapariPluginManager.html","/api/stable/napari.plugins.PackageMetadata.html","/api/stable/napari.plugins.Path.html","/api/stable/napari.plugins.PluginManifest.html"],"href":"/api/stable/napari.plugins.html","text":"napari.plugins"},"/api/stable/napari.plugins.PluginManifest.html":{"level":3,"children":[],"href":"/api/stable/napari.plugins.PluginManifest.html","text":"napari.plugins.PluginManifest"},"/api/stable/napari.plugins.Path.html":{"level":3,"children":[],"href":"/api/stable/napari.plugins.Path.html","text":"napari.plugins.Path"},"/api/stable/napari.plugins.PackageMetadata.html":{"level":3,"children":[],"href":"/api/stable/napari.plugins.PackageMetadata.html","text":"napari.plugins.PackageMetadata"},"/api/stable/napari.plugins.NapariPluginManager.html":{"level":3,"children":[],"href":"/api/stable/napari.plugins.NapariPluginManager.html","text":"napari.plugins.NapariPluginManager"},"/api/stable/napari.utils.html":{"level":2,"children":["/api/stable/napari.utils.Colormap.html","/api/stable/napari.utils.nbscreenshot.html","/api/stable/napari.utils.progress.html"],"href":"/api/stable/napari.utils.html","text":"napari.utils"},"/api/stable/napari.utils.progress.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.progress.html","text":"napari.utils.progress"},"/api/stable/napari.utils.nbscreenshot.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.nbscreenshot.html","text":"napari.utils.nbscreenshot"},"/api/stable/napari.utils.Colormap.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.Colormap.html","text":"napari.utils.Colormap"},"/api/stable/napari.types.html":{"level":2,"children":["/api/stable/napari.types.ArrayBase.html","/api/stable/napari.types.Path.html","/api/stable/napari.types.SampleDict.html","/api/stable/napari.types.TracebackType.html","/api/stable/napari.types.TypedDict.html","/api/stable/napari.types.partial.html"],"href":"/api/stable/napari.types.html","text":"napari.types"},"/api/stable/napari.types.partial.html":{"level":3,"children":[],"href":"/api/stable/napari.types.partial.html","text":"napari.types.partial"},"/api/stable/napari.types.TypedDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TypedDict.html","text":"napari.types.TypedDict"},"/api/stable/napari.types.TracebackType.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TracebackType.html","text":"napari.types.TracebackType"},"/api/stable/napari.types.SampleDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.SampleDict.html","text":"napari.types.SampleDict"},"/api/stable/napari.types.Path.html":{"level":3,"children":[],"href":"/api/stable/napari.types.Path.html","text":"napari.types.Path"},"/api/stable/napari.types.ArrayBase.html":{"level":3,"children":[],"href":"/api/stable/napari.types.ArrayBase.html","text":"napari.types.ArrayBase"},"/api/stable/napari.view_layers.html":{"level":2,"children":["/api/stable/napari.view_layers.Dims.html","/api/stable/napari.view_layers.Viewer.html"],"href":"/api/stable/napari.view_layers.html","text":"napari.view_layers"},"/api/stable/napari.view_layers.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.view_layers.Viewer.html","text":"napari.view_layers.Viewer"},"/api/stable/napari.view_layers.Dims.html":{"level":3,"children":[],"href":"/api/stable/napari.view_layers.Dims.html","text":"napari.view_layers.Dims"},"/api/stable/napari.layers.html":{"level":2,"children":["/api/stable/napari.layers.Image.html","/api/stable/napari.layers.Labels.html","/api/stable/napari.layers.Layer.html","/api/stable/napari.layers.Points.html","/api/stable/napari.layers.Shapes.html","/api/stable/napari.layers.Surface.html","/api/stable/napari.layers.Tracks.html","/api/stable/napari.layers.Vectors.html"],"href":"/api/stable/napari.layers.html","text":"napari.layers"},"/api/stable/napari.layers.Vectors.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Vectors.html","text":"napari.layers.Vectors"},"/api/stable/napari.layers.Tracks.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Tracks.html","text":"napari.layers.Tracks"},"/api/stable/napari.layers.Surface.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Surface.html","text":"napari.layers.Surface"},"/api/stable/napari.layers.Shapes.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Shapes.html","text":"napari.layers.Shapes"},"/api/stable/napari.layers.Points.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Points.html","text":"napari.layers.Points"},"/api/stable/napari.layers.Layer.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Layer.html","text":"napari.layers.Layer"},"/api/stable/napari.layers.Labels.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Labels.html","text":"napari.layers.Labels"},"/api/stable/napari.layers.Image.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Image.html","text":"napari.layers.Image"},"/community/index.html":{"level":1,"children":["/community/mission_and_values.html","/community/team.html","/community/code_of_conduct.html","/community/code_of_conduct_reporting.html","/community/governance.html","/community/working_groups.html","/community/meeting_schedule.html"],"href":"/community/index.html","text":"Community"},"/community/meeting_schedule.html":{"level":2,"children":[],"href":"/community/meeting_schedule.html","text":"Meeting schedule"},"/community/working_groups.html":{"level":2,"children":[],"href":"/community/working_groups.html","text":"Working groups"},"/community/governance.html":{"level":2,"children":[],"href":"/community/governance.html","text":"Governance model"},"/community/code_of_conduct_reporting.html":{"level":2,"children":[],"href":"/community/code_of_conduct_reporting.html","text":"Handling Code of Conduct reports"},"/community/code_of_conduct.html":{"level":2,"children":[],"href":"/community/code_of_conduct.html","text":"Code of Conduct"},"/community/team.html":{"level":2,"children":[],"href":"/community/team.html","text":"About the project and team"},"/community/mission_and_values.html":{"level":2,"children":[],"href":"/community/mission_and_values.html","text":"Mission and Values"},"/plugins/stable/index.html":{"level":1,"children":["/plugins/stable/first_plugin.html","/plugins/stable/manifest.html","/plugins/stable/contributions.html","/plugins/stable/guides.html","/plugins/stable/test_deploy.html","/plugins/stable/best_practices.html","/plugins/stable/npe2_migration_guide.html","/plugins/stable/npe1.html","/plugins/stable/find_and_install_plugin.html"],"href":"/plugins/stable/index.html","text":"Plugins"},"/plugins/stable/find_and_install_plugin.html":{"level":2,"children":[],"href":"/plugins/stable/find_and_install_plugin.html","text":"Finding and installing a napari plugin"},"/plugins/stable/npe1.html":{"level":2,"children":[],"href":"/plugins/stable/npe1.html","text":"1st Gen Plugin Guide (Deprecated)"},"/plugins/stable/npe2_migration_guide.html":{"level":2,"children":[],"href":"/plugins/stable/npe2_migration_guide.html","text":"npe2 migration guide"},"/plugins/stable/best_practices.html":{"level":2,"children":[],"href":"/plugins/stable/best_practices.html","text":"Best practices"},"/plugins/stable/test_deploy.html":{"level":2,"children":[],"href":"/plugins/stable/test_deploy.html","text":"Test and Deploy"},"/plugins/stable/guides.html":{"level":2,"children":[],"href":"/plugins/stable/guides.html","text":"Contribution Guides"},"/plugins/stable/contributions.html":{"level":2,"children":[],"href":"/plugins/stable/contributions.html","text":"Contributions Reference"},"/plugins/stable/manifest.html":{"level":2,"children":[],"href":"/plugins/stable/manifest.html","text":"Manifest Reference"},"/plugins/stable/first_plugin.html":{"level":2,"children":[],"href":"/plugins/stable/first_plugin.html","text":"Your First Plugin"},"/guides/stable/index.html":{"level":1,"children":["/guides/stable/magicgui.html","/guides/stable/event_loop.html","/guides/stable/threading.html","/guides/stable/rendering-explanation.html","/guides/stable/rendering.html","/guides/stable/performance.html","/guides/stable/3D_interactivity.html","/guides/stable/events_reference.html","/guides/stable/contexts_expressions.html","/guides/stable/preferences.html"],"href":"/guides/stable/index.html","text":"In-depth explanations"},"/guides/stable/preferences.html":{"level":2,"children":[],"href":"/guides/stable/preferences.html","text":"Preferences"},"/guides/stable/contexts_expressions.html":{"level":2,"children":[],"href":"/guides/stable/contexts_expressions.html","text":"Contexts and Expressions in napari"},"/guides/stable/events_reference.html":{"level":2,"children":[],"href":"/guides/stable/events_reference.html","text":"Events reference"},"/guides/stable/3D_interactivity.html":{"level":2,"children":[],"href":"/guides/stable/3D_interactivity.html","text":"3D interactivity"},"/guides/stable/performance.html":{"level":2,"children":[],"href":"/guides/stable/performance.html","text":"napari performance"},"/guides/stable/rendering.html":{"level":2,"children":[],"href":"/guides/stable/rendering.html","text":"Asynchronous rendering"},"/guides/stable/rendering-explanation.html":{"level":2,"children":[],"href":"/guides/stable/rendering-explanation.html","text":"Rendering in napari"},"/guides/stable/threading.html":{"level":2,"children":[],"href":"/guides/stable/threading.html","text":"Multithreading in napari"},"/guides/stable/event_loop.html":{"level":2,"children":[],"href":"/guides/stable/event_loop.html","text":"An introduction to the event loop in napari"},"/guides/stable/magicgui.html":{"level":2,"children":[],"href":"/guides/stable/magicgui.html","text":"Using magicgui in napari"},"/howtos/index.html":{"level":1,"children":["/howtos/connecting_events.html","/howtos/napari_imageJ.html","/howtos/docker.html","/howtos/perfmon.html"],"href":"/howtos/index.html","text":"How-to guides"},"/howtos/perfmon.html":{"level":2,"children":[],"href":"/howtos/perfmon.html","text":"Performance monitoring"},"/howtos/docker.html":{"level":2,"children":[],"href":"/howtos/docker.html","text":"Napari in Docker"},"/howtos/napari_imageJ.html":{"level":2,"children":[],"href":"/howtos/napari_imageJ.html","text":"napari + ImageJ how-to guide"},"/howtos/connecting_events.html":{"level":2,"children":[],"href":"/howtos/connecting_events.html","text":"Hooking up your own events"},"/tutorials/index.html":{"level":1,"children":["/tutorials/segmentation/index.html","/tutorials/tracking/index.html","/tutorials/applications/annotate_points.html","/tutorials/applications/dask.html","/tutorials/further-resources/napari-workshops.html","/tutorials/tracking/cell_tracking.html","/tutorials/segmentation/annotate_segmentation.html"],"href":"/tutorials/index.html","text":"Tutorials"},"/tutorials/segmentation/annotate_segmentation.html":{"level":2,"children":[],"href":"/tutorials/segmentation/annotate_segmentation.html","text":"Annotating segmentation with text and bounding boxes"},"/tutorials/tracking/cell_tracking.html":{"level":2,"children":[],"href":"/tutorials/tracking/cell_tracking.html","text":"Single cell tracking with napari"},"/tutorials/further-resources/napari-workshops.html":{"level":2,"children":[],"href":"/tutorials/further-resources/napari-workshops.html","text":"napari workshops"},"/tutorials/applications/dask.html":{"level":2,"children":[],"href":"/tutorials/applications/dask.html","text":"Using Dask and napari to process & view large datasets"},"/tutorials/applications/annotate_points.html":{"level":2,"children":[],"href":"/tutorials/applications/annotate_points.html","text":"Annotating videos with napari"},"/tutorials/tracking/index.html":{"level":2,"children":[],"href":"/tutorials/tracking/index.html","text":"Tracking"},"/tutorials/segmentation/index.html":{"level":2,"children":[],"href":"/tutorials/segmentation/index.html","text":"Segmentation"},"/tutorials/start_index.html":{"level":1,"children":["/tutorials/fundamentals/installation.html","/tutorials/fundamentals/getting_started.html","/tutorials/fundamentals/viewer.html","/tutorials/fundamentals/image.html","/tutorials/fundamentals/labels.html","/tutorials/fundamentals/points.html","/tutorials/fundamentals/shapes.html","/tutorials/fundamentals/surface.html","/tutorials/fundamentals/tracks.html","/tutorials/fundamentals/vectors.html"],"href":"/tutorials/start_index.html","text":"Getting Started"},"/tutorials/fundamentals/vectors.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/vectors.html","text":"vectors layer tutorial"},"/tutorials/fundamentals/tracks.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/tracks.html","text":"tracks layer tutorial"},"/tutorials/fundamentals/surface.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/surface.html","text":"surface layer tutorial"},"/tutorials/fundamentals/shapes.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/shapes.html","text":"shapes layer tutorial"},"/tutorials/fundamentals/points.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/points.html","text":"points layer tutorial"},"/tutorials/fundamentals/labels.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/labels.html","text":"labels layer tutorial"},"/tutorials/fundamentals/image.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/image.html","text":"image layer tutorial"},"/tutorials/fundamentals/viewer.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/viewer.html","text":"napari viewer tutorial"},"/tutorials/fundamentals/getting_started.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/getting_started.html","text":"Getting started with napari"},"/tutorials/fundamentals/installation.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/installation.html","text":"How to install napari on your machine"}},"rootGlobalHeaders":["/tutorials/start_index.html","/tutorials/index.html","/howtos/index.html","/guides/stable/index.html","/plugins/stable/index.html","/community/index.html","/api/stable/index.html","/developers/index.html","/glossary.html","/release/index.html","/roadmaps/index.html","https://github.com/napari/napari","https://napari-hub.org"],"pageTitle":"Source code for npe2.manifest.schema","pageFrontMatter":{},"previewImage":"","previewDescription":"","appScripts":[{"src":"/_static/documentation_options.js"},{"src":"/_static/jquery.js"},{"src":"/_static/underscore.js"},{"src":"/_static/doctools.js"},{"src":"/_static/togglebutton.js"},{"src":"/_static/clipboard.min.js"},{"src":"/_static/copybutton.js"},{"children":"var togglebuttonSelector = '.toggle, .admonition.dropdown, .tag_hide_input div.cell_input, .tag_hide-input div.cell_input, .tag_hide_output div.cell_output, .tag_hide-output div.cell_output, .tag_hide_cell.cell, .tag_hide-cell.cell';"},{"children":"const THEBE_JS_URL = \"https://unpkg.com/thebe@0.8.2/lib/index.js\"\nconst thebe_selector = \".thebe,.cell\"\nconst thebe_selector_input = \"pre\"\nconst thebe_selector_output = \".output, .cell_output\"\n"},{"src":"/_static/sphinx-thebe.js"}],"appStyleSheets":[{"href":"/_static/pygments.css","rel":"stylesheet"},{"href":"/_static/togglebutton.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/copybutton.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/mystnb.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/sphinx-thebe.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/panels-main.c949a650a448cc0ae9fd3441c0e17fb0.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/panels-variables.06eb56fa6e07937060861dad626602ad.css","rel":"stylesheet","type":"text/css"}],"pageBodyHtml":"\n        <div id=\"documentation_options\" data-url_root=\"../../../\"></div>\n        <div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">annotations</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">from</span> <span class=\"nn\">contextlib</span> <span class=\"kn\">import</span> <span class=\"n\">contextmanager</span>\n<span class=\"kn\">from</span> <span class=\"nn\">importlib</span> <span class=\"kn\">import</span> <span class=\"n\">util</span>\n<span class=\"kn\">from</span> <span class=\"nn\">logging</span> <span class=\"kn\">import</span> <span class=\"n\">getLogger</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">textwrap</span> <span class=\"kn\">import</span> <span class=\"n\">dedent</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">TYPE_CHECKING</span><span class=\"p\">,</span> <span class=\"n\">Iterator</span><span class=\"p\">,</span> <span class=\"n\">NamedTuple</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Sequence</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pydantic</span> <span class=\"kn\">import</span> <span class=\"n\">Extra</span><span class=\"p\">,</span> <span class=\"n\">Field</span><span class=\"p\">,</span> <span class=\"n\">ValidationError</span><span class=\"p\">,</span> <span class=\"n\">root_validator</span><span class=\"p\">,</span> <span class=\"n\">validator</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pydantic.error_wrappers</span> <span class=\"kn\">import</span> <span class=\"n\">ErrorWrapper</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pydantic.main</span> <span class=\"kn\">import</span> <span class=\"n\">BaseModel</span><span class=\"p\">,</span> <span class=\"n\">ModelMetaclass</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">..types</span> <span class=\"kn\">import</span> <span class=\"n\">PythonName</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">_validators</span>\n<span class=\"kn\">from</span> <span class=\"nn\">._bases</span> <span class=\"kn\">import</span> <span class=\"n\">ImportExportModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.contributions</span> <span class=\"kn\">import</span> <span class=\"n\">ContributionPoints</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.package_metadata</span> <span class=\"kn\">import</span> <span class=\"n\">PackageMetadata</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.utils</span> <span class=\"kn\">import</span> <span class=\"n\">Version</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">importlib</span> <span class=\"kn\">import</span> <span class=\"n\">metadata</span>\n<span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">importlib_metadata</span> <span class=\"k\">as</span> <span class=\"nn\">metadata</span>  <span class=\"c1\"># type: ignore</span>\n\n<span class=\"k\">if</span> <span class=\"n\">TYPE_CHECKING</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">importlib.metadata</span> <span class=\"kn\">import</span> <span class=\"n\">EntryPoint</span>\n\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">SCHEMA_VERSION</span> <span class=\"o\">=</span> <span class=\"s2\">\"0.1.0\"</span>\n<span class=\"n\">ENTRY_POINT</span> <span class=\"o\">=</span> <span class=\"s2\">\"napari.manifest\"</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">DiscoverResults</span><span class=\"p\">(</span><span class=\"n\">NamedTuple</span><span class=\"p\">):</span>\n    <span class=\"n\">manifest</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">PluginManifest</span><span class=\"p\">]</span>\n    <span class=\"n\">entrypoint</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">EntryPoint</span><span class=\"p\">]</span>\n    <span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"ne\">Exception</span><span class=\"p\">]</span>\n\n\n<div class=\"viewcode-block\" id=\"PluginManifest\"><a class=\"viewcode-back\" href=\"../../../api/stable/napari.plugins.PluginManifest.html#napari.plugins.PluginManifest\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">PluginManifest</span><span class=\"p\">(</span><span class=\"n\">ImportExportModel</span><span class=\"p\">):</span>\n\n    <span class=\"c1\"># VS Code uses &lt;publisher&gt;.&lt;name&gt; as a unique ID for the extension</span>\n    <span class=\"c1\"># should this just be the package name ... not the module name? (yes)</span>\n    <span class=\"c1\"># do we normalize this? (i.e. underscores / dashes ?) (no)</span>\n    <span class=\"c1\"># TODO: enforce that this matches the package name</span>\n\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span>\n        <span class=\"o\">...</span><span class=\"p\">,</span>\n        <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"The name of the plugin. Though this field is mandatory, it *must*\"</span>\n        <span class=\"s2\">\" match the package `name` as defined in the python package metadata.\"</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">_validate_name</span> <span class=\"o\">=</span> <span class=\"n\">validator</span><span class=\"p\">(</span><span class=\"s2\">\"name\"</span><span class=\"p\">,</span> <span class=\"n\">pre</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">allow_reuse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)(</span>\n        <span class=\"n\">_validators</span><span class=\"o\">.</span><span class=\"n\">package_name</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">display_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span>\n        <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n        <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"User-facing text to display as the name of this plugin\"</span><span class=\"p\">,</span>\n        <span class=\"c1\"># Must be 3-40 characters long, containing printable word characters,</span>\n        <span class=\"c1\"># and must not begin or end with an underscore, white space, or</span>\n        <span class=\"c1\"># non-word character.</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">_validate_display_name</span> <span class=\"o\">=</span> <span class=\"n\">validator</span><span class=\"p\">(</span><span class=\"s2\">\"display_name\"</span><span class=\"p\">,</span> <span class=\"n\">allow_reuse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)(</span>\n        <span class=\"n\">_validators</span><span class=\"o\">.</span><span class=\"n\">display_name</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"c1\"># Plugins rely on certain guarantees to interoperate propertly with the</span>\n    <span class=\"c1\"># plugin engine. These include the manifest specification, conventions</span>\n    <span class=\"c1\"># around python packaging, command api's, etc. Together these form a</span>\n    <span class=\"c1\"># \"contract\". The version of this contract is the \"schema version.\"</span>\n    <span class=\"c1\">#</span>\n    <span class=\"c1\"># The first release of npe2 defines the first schema version.</span>\n    <span class=\"c1\"># As the contract around plugins evolve the SCHEMA_VERSION should be</span>\n    <span class=\"c1\"># increased follow SemVer rules. Note that sometimes the version number</span>\n    <span class=\"c1\"># will change even though no npe2 code changes.</span>\n    <span class=\"c1\">#</span>\n    <span class=\"c1\"># The `schema_version` field declares the version of the contract that this</span>\n    <span class=\"c1\"># plugin targets.</span>\n    <span class=\"n\">schema_version</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span>\n        <span class=\"n\">SCHEMA_VERSION</span><span class=\"p\">,</span>\n        <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"A SemVer compatible version string matching the napari plugin \"</span>\n        <span class=\"s2\">\"schema version that the plugin is compatible with.\"</span><span class=\"p\">,</span>\n        <span class=\"n\">always_export</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"c1\"># TODO:</span>\n    <span class=\"c1\"># Perhaps we should version the plugin interface (not so the manifest, but</span>\n    <span class=\"c1\"># the actual mechanism/consumption of plugin information) independently</span>\n    <span class=\"c1\"># of napari itself</span>\n\n    <span class=\"n\">on_activate</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">PythonName</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span>\n        <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"Fully qualified python path to a function that will be called \"</span>\n        <span class=\"s2\">\"upon plugin activation (e.g. `'my_plugin.some_module:activate'`). The \"</span>\n        <span class=\"s2\">\"activate function can be used to connect command ids to python callables, or\"</span>\n        <span class=\"s2\">\" perform other side-effects. A plugin will be 'activated' when one of its \"</span>\n        <span class=\"s2\">\"contributions is requested by the user (such as a widget, or reader).\"</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">_validate_activate_func</span> <span class=\"o\">=</span> <span class=\"n\">validator</span><span class=\"p\">(</span><span class=\"s2\">\"on_activate\"</span><span class=\"p\">,</span> <span class=\"n\">allow_reuse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)(</span>\n        <span class=\"n\">_validators</span><span class=\"o\">.</span><span class=\"n\">python_name</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">on_deactivate</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">PythonName</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span>\n        <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"Fully qualified python path to a function that will be called \"</span>\n        <span class=\"s2\">\"when a user deactivates a plugin (e.g. `'my_plugin.some_module:deactivate'`)\"</span>\n        <span class=\"s2\">\". This is optional, and may be used to perform any plugin cleanup.\"</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">_validate_deactivate_func</span> <span class=\"o\">=</span> <span class=\"n\">validator</span><span class=\"p\">(</span><span class=\"s2\">\"on_deactivate\"</span><span class=\"p\">,</span> <span class=\"n\">allow_reuse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)(</span>\n        <span class=\"n\">_validators</span><span class=\"o\">.</span><span class=\"n\">python_name</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">contributions</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ContributionPoints</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span>\n        <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"An object describing the plugin's \"</span>\n        <span class=\"s2\">\"[contributions](./contributions)\"</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">package_metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">PackageMetadata</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span>\n        <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"Package metadata following \"</span>\n        <span class=\"s2\">\"https://packaging.python.org/specifications/core-metadata/. \"</span>\n        <span class=\"s2\">\"For normal (non-dynamic) plugins, this data will come from the package's \"</span>\n        <span class=\"s2\">\"setup.cfg\"</span><span class=\"p\">,</span>\n        <span class=\"n\">hide_docs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">license</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">package_metadata</span><span class=\"o\">.</span><span class=\"n\">license</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">package_metadata</span> <span class=\"k\">else</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">package_version</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">package_metadata</span><span class=\"o\">.</span><span class=\"n\">version</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">package_metadata</span> <span class=\"k\">else</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">description</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">package_metadata</span><span class=\"o\">.</span><span class=\"n\">summary</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">package_metadata</span> <span class=\"k\">else</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">author</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">package_metadata</span><span class=\"o\">.</span><span class=\"n\">author</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">package_metadata</span> <span class=\"k\">else</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@root_validator</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_validate_root</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">:</span>\n        <span class=\"c1\"># validate schema version</span>\n        <span class=\"n\">declared_version</span> <span class=\"o\">=</span> <span class=\"n\">Version</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"schema_version\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\"</span><span class=\"p\">))</span>\n        <span class=\"n\">current_version</span> <span class=\"o\">=</span> <span class=\"n\">Version</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">SCHEMA_VERSION</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">current_version</span> <span class=\"o\">&lt;</span> <span class=\"n\">declared_version</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"n\">dedent</span><span class=\"p\">(</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">\"The declared schema version '</span><span class=\"si\">{</span><span class=\"n\">declared_version</span><span class=\"si\">}</span><span class=\"s2\">' is \"</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">\"newer than npe2's schema version: '</span><span class=\"si\">{</span><span class=\"n\">current_version</span><span class=\"si\">}</span><span class=\"s2\">'. You may \"</span>\n                    <span class=\"s2\">\"need to upgrade npe2.\"</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">mf_name</span> <span class=\"o\">=</span> <span class=\"n\">values</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"name\"</span><span class=\"p\">)</span>\n        <span class=\"n\">invalid_commands</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"n\">values</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"contributions\"</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">command</span> <span class=\"ow\">in</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s2\">\"contributions\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">commands</span> <span class=\"ow\">or</span> <span class=\"p\">[]:</span>\n                <span class=\"n\">id_start_actual</span> <span class=\"o\">=</span> <span class=\"n\">command</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">\".\"</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"k\">if</span> <span class=\"n\">mf_name</span> <span class=\"o\">!=</span> <span class=\"n\">id_start_actual</span><span class=\"p\">:</span>\n                    <span class=\"n\">invalid_commands</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">invalid_commands</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"n\">dedent</span><span class=\"p\">(</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">\"\"\"Commands identifiers must start with the current package name </span><span class=\"si\">{</span><span class=\"n\">mf_name</span><span class=\"si\">!r}</span><span class=\"s2\"></span>\n<span class=\"s2\">            the following commands where found to break this assumption:</span>\n<span class=\"s2\">                </span><span class=\"si\">{</span><span class=\"n\">invalid_commands</span><span class=\"si\">}</span><span class=\"s2\"></span>\n<span class=\"s2\">            \"\"\"</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">values</span>\n\n<div class=\"viewcode-block\" id=\"PluginManifest.from_distribution\"><a class=\"viewcode-back\" href=\"../../../api/stable/napari.plugins.PluginManifest.html#napari.plugins.PluginManifest.from_distribution\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_distribution</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">PluginManifest</span><span class=\"p\">:</span>\n        <span class=\"sd\">\"\"\"Return PluginManifest given a distribution (package) name.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        name : str</span>\n<span class=\"sd\">            Name of a python distribution installed in the environment.</span>\n<span class=\"sd\">            Note: this is the package name, not the top level module name,</span>\n<span class=\"sd\">            (e.g. \"scikit-image\", not \"skimage\").</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        PluginManifest</span>\n<span class=\"sd\">            The parsed manifest.</span>\n\n<span class=\"sd\">        Raises</span>\n<span class=\"sd\">        ------</span>\n<span class=\"sd\">        ValueError</span>\n<span class=\"sd\">            If the distribution exists, but does not provide a manifest</span>\n<span class=\"sd\">        PackageNotFoundError</span>\n<span class=\"sd\">            If there is no distribution found for `name`</span>\n<span class=\"sd\">        ValidationError</span>\n<span class=\"sd\">            If the manifest is not valid</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"n\">dist</span> <span class=\"o\">=</span> <span class=\"n\">metadata</span><span class=\"o\">.</span><span class=\"n\">distribution</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>  <span class=\"c1\"># may raise PackageNotFoundError</span>\n        <span class=\"k\">for</span> <span class=\"n\">ep</span> <span class=\"ow\">in</span> <span class=\"n\">dist</span><span class=\"o\">.</span><span class=\"n\">entry_points</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">ep</span><span class=\"o\">.</span><span class=\"n\">group</span> <span class=\"o\">==</span> <span class=\"n\">ENTRY_POINT</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">PluginManifest</span><span class=\"o\">.</span><span class=\"n\">_from_entrypoint</span><span class=\"p\">(</span><span class=\"n\">ep</span><span class=\"p\">,</span> <span class=\"n\">dist</span><span class=\"p\">)</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"Distribution </span><span class=\"si\">{name!r}</span><span class=\"s2\"> exists but does not provide a napari manifest\"</span>\n        <span class=\"p\">)</span></div>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Config</span><span class=\"p\">:</span>\n        <span class=\"n\">underscore_attrs_are_private</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"n\">extra</span> <span class=\"o\">=</span> <span class=\"n\">Extra</span><span class=\"o\">.</span><span class=\"n\">forbid</span>\n\n<div class=\"viewcode-block\" id=\"PluginManifest.discover\"><a class=\"viewcode-back\" href=\"../../../api/stable/napari.plugins.PluginManifest.html#napari.plugins.PluginManifest.discover\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">discover</span><span class=\"p\">(</span>\n        <span class=\"bp\">cls</span><span class=\"p\">,</span>\n        <span class=\"n\">entry_point_group</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">ENTRY_POINT</span><span class=\"p\">,</span>\n        <span class=\"n\">paths</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Path</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">(),</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"n\">DiscoverResults</span><span class=\"p\">]:</span>\n        <span class=\"sd\">\"\"\"Discover manifests in the environment.</span>\n\n<span class=\"sd\">        This function searches for installed python packages with a matching</span>\n<span class=\"sd\">        entry point group and then attempts to resolve the manifest file.</span>\n\n<span class=\"sd\">        The manifest file should be specified in the plugin's `setup.cfg` or</span>\n<span class=\"sd\">        `setup.py` file using the [entry point group][1]: \"napari.manifest\".</span>\n<span class=\"sd\">        For example, this would be the section for a plugin \"npe-tester\" with</span>\n<span class=\"sd\">        \"napari.yaml\" as the manifest file:</span>\n\n<span class=\"sd\">        ```cfg</span>\n<span class=\"sd\">        [options.entry_points]</span>\n<span class=\"sd\">        napari.manifest =</span>\n<span class=\"sd\">            npe2-tester = npe2_tester:napari.yaml</span>\n<span class=\"sd\">        ```</span>\n\n<span class=\"sd\">        The manifest file is specified relative to the submodule root path.</span>\n<span class=\"sd\">        So for the example it will be loaded from:</span>\n<span class=\"sd\">        `&lt;path/to/npe2-tester&gt;/napari.yaml`.</span>\n\n<span class=\"sd\">        [1]: https://packaging.python.org/specifications/entry-points/</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        entry_point_group : str, optional</span>\n<span class=\"sd\">            name of entry point group to discover, by default 'napari.manifest'</span>\n<span class=\"sd\">        paths : Sequence[str], optional</span>\n<span class=\"sd\">            paths to add to sys.path while discovering.</span>\n\n<span class=\"sd\">        Yields</span>\n<span class=\"sd\">        ------</span>\n<span class=\"sd\">        DiscoverResults: (3 namedtuples: manifest, entrypoint, error)</span>\n<span class=\"sd\">            3-tuples with either manifest or (entrypoint and error) being None.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"k\">with</span> <span class=\"n\">_temporary_path_additions</span><span class=\"p\">(</span><span class=\"n\">paths</span><span class=\"p\">):</span>\n            <span class=\"k\">for</span> <span class=\"n\">dist</span> <span class=\"ow\">in</span> <span class=\"n\">metadata</span><span class=\"o\">.</span><span class=\"n\">distributions</span><span class=\"p\">():</span>\n                <span class=\"k\">for</span> <span class=\"n\">ep</span> <span class=\"ow\">in</span> <span class=\"n\">dist</span><span class=\"o\">.</span><span class=\"n\">entry_points</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"n\">ep</span><span class=\"o\">.</span><span class=\"n\">group</span> <span class=\"o\">!=</span> <span class=\"n\">entry_point_group</span><span class=\"p\">:</span>\n                        <span class=\"k\">continue</span>\n                    <span class=\"k\">try</span><span class=\"p\">:</span>\n                        <span class=\"n\">pm</span> <span class=\"o\">=</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">_from_entrypoint</span><span class=\"p\">(</span><span class=\"n\">ep</span><span class=\"p\">,</span> <span class=\"n\">dist</span><span class=\"p\">)</span>\n                        <span class=\"k\">yield</span> <span class=\"n\">DiscoverResults</span><span class=\"p\">(</span><span class=\"n\">pm</span><span class=\"p\">,</span> <span class=\"n\">ep</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n                    <span class=\"k\">except</span> <span class=\"n\">ValidationError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n                        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">\"Invalid schema </span><span class=\"si\">{</span><span class=\"n\">ep</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"si\">!r}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n                        <span class=\"k\">yield</span> <span class=\"n\">DiscoverResults</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">ep</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n                    <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n                        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span>\n                            <span class=\"s2\">\"</span><span class=\"si\">%s</span><span class=\"s2\"> -&gt; </span><span class=\"si\">%r</span><span class=\"s2\"> could not be imported: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span>\n                            <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">entry_point_group</span><span class=\"p\">,</span> <span class=\"n\">ep</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n                        <span class=\"p\">)</span>\n                        <span class=\"k\">yield</span> <span class=\"n\">DiscoverResults</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">ep</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_from_entrypoint</span><span class=\"p\">(</span>\n        <span class=\"bp\">cls</span><span class=\"p\">,</span>\n        <span class=\"n\">entry_point</span><span class=\"p\">:</span> <span class=\"n\">EntryPoint</span><span class=\"p\">,</span>\n        <span class=\"n\">distribution</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">metadata</span><span class=\"o\">.</span><span class=\"n\">Distribution</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">PluginManifest</span><span class=\"p\">:</span>\n\n        <span class=\"n\">match</span> <span class=\"o\">=</span> <span class=\"n\">entry_point</span><span class=\"o\">.</span><span class=\"n\">pattern</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"n\">entry_point</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>  <span class=\"c1\"># type: ignore</span>\n        <span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">match</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"s2\">\"module\"</span><span class=\"p\">)</span>\n\n        <span class=\"n\">spec</span> <span class=\"o\">=</span> <span class=\"n\">util</span><span class=\"o\">.</span><span class=\"n\">find_spec</span><span class=\"p\">(</span><span class=\"n\">module</span> <span class=\"ow\">or</span> <span class=\"s2\">\"\"</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">spec</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">\"Cannot find module </span><span class=\"si\">{</span><span class=\"n\">module</span><span class=\"si\">!r}</span><span class=\"s2\"> declared in \"</span>\n                <span class=\"sa\">f</span><span class=\"s2\">\"entrypoint: </span><span class=\"si\">{</span><span class=\"n\">entry_point</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"si\">!r}</span><span class=\"s2\">\"</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">match</span> <span class=\"o\">=</span> <span class=\"n\">entry_point</span><span class=\"o\">.</span><span class=\"n\">pattern</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"n\">entry_point</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>  <span class=\"c1\"># type: ignore</span>\n        <span class=\"n\">fname</span> <span class=\"o\">=</span> <span class=\"n\">match</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"s2\">\"attr\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">loc</span> <span class=\"ow\">in</span> <span class=\"n\">spec</span><span class=\"o\">.</span><span class=\"n\">submodule_search_locations</span> <span class=\"ow\">or</span> <span class=\"p\">[]:</span>\n            <span class=\"n\">mf_file</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">loc</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">fname</span>\n            <span class=\"k\">if</span> <span class=\"n\">mf_file</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n                <span class=\"n\">mf</span> <span class=\"o\">=</span> <span class=\"n\">PluginManifest</span><span class=\"o\">.</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"n\">mf_file</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">distribution</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                    <span class=\"n\">meta</span> <span class=\"o\">=</span> <span class=\"n\">PackageMetadata</span><span class=\"o\">.</span><span class=\"n\">from_dist_metadata</span><span class=\"p\">(</span><span class=\"n\">distribution</span><span class=\"o\">.</span><span class=\"n\">metadata</span><span class=\"p\">)</span>\n                    <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">package_metadata</span> <span class=\"o\">=</span> <span class=\"n\">meta</span>\n\n                    <span class=\"k\">assert</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">\"Manifest name must match package name\"</span>\n                    <span class=\"k\">return</span> <span class=\"n\">mf</span>\n\n        <span class=\"k\">raise</span> <span class=\"ne\">FileNotFoundError</span><span class=\"p\">(</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"sa\">f</span><span class=\"s2\">\"Could not find file </span><span class=\"si\">{</span><span class=\"n\">fname</span><span class=\"si\">!r}</span><span class=\"s2\"> in module </span><span class=\"si\">{</span><span class=\"n\">module</span><span class=\"si\">!r}</span><span class=\"s2\">\"</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_from_package_or_name</span><span class=\"p\">(</span>\n        <span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">package_or_filename</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">PluginManifest</span><span class=\"p\">:</span>\n        <span class=\"sd\">\"\"\"Internal convenience function, calls both `from_file` and `from_distribution`</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        package_or_filename : Union[Path, str]</span>\n<span class=\"sd\">            Either a filename or a package name.  Will be tried first as a filename, and</span>\n<span class=\"sd\">            then as a distribution name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        PluginManifest</span>\n<span class=\"sd\">            [description]</span>\n\n<span class=\"sd\">        Raises</span>\n<span class=\"sd\">        ------</span>\n<span class=\"sd\">        ValidationError</span>\n<span class=\"sd\">            If the name can be resolved as either a distribution name or a file,</span>\n<span class=\"sd\">            but the manifest is not valid.</span>\n<span class=\"sd\">        ValueError</span>\n<span class=\"sd\">            If the name does not resolve to either a distribution name or a filename.</span>\n\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">pydantic</span> <span class=\"kn\">import</span> <span class=\"n\">ValidationError</span>\n\n        <span class=\"kn\">from</span> <span class=\"nn\">npe2</span> <span class=\"kn\">import</span> <span class=\"n\">PluginManifest</span>\n\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">PluginManifest</span><span class=\"o\">.</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"n\">package_or_filename</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"n\">ValidationError</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">raise</span>\n        <span class=\"k\">except</span> <span class=\"p\">(</span><span class=\"ne\">FileNotFoundError</span><span class=\"p\">,</span> <span class=\"ne\">ValueError</span><span class=\"p\">):</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">PluginManifest</span><span class=\"o\">.</span><span class=\"n\">from_distribution</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">package_or_filename</span><span class=\"p\">))</span>\n            <span class=\"k\">except</span> <span class=\"n\">ValidationError</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n                <span class=\"k\">raise</span>\n            <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">\"Could not find manifest for </span><span class=\"si\">{</span><span class=\"n\">package_or_filename</span><span class=\"si\">!r}</span><span class=\"s2\"> as either a \"</span>\n                    <span class=\"s2\">\"package name or a file..\"</span>\n                <span class=\"p\">)</span> <span class=\"kn\">from</span> <span class=\"nn\">e</span>\n\n<div class=\"viewcode-block\" id=\"PluginManifest.validate_imports\"><a class=\"viewcode-back\" href=\"../../../api/stable/napari.plugins.PluginManifest.html#napari.plugins.PluginManifest.validate_imports\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">validate_imports</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"sd\">\"\"\"Checks recursively that all `python_name` fields are actually importable.\"\"\"</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">.utils</span> <span class=\"kn\">import</span> <span class=\"n\">import_python_name</span>\n\n        <span class=\"n\">errors</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">check_pynames</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">:</span> <span class=\"n\">BaseModel</span><span class=\"p\">,</span> <span class=\"n\">loc</span><span class=\"o\">=</span><span class=\"p\">()):</span>\n            <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">m</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">value</span><span class=\"p\">:</span>\n                    <span class=\"k\">continue</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">BaseModel</span><span class=\"p\">):</span>\n                    <span class=\"k\">return</span> <span class=\"n\">check_pynames</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">loc</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">))</span>\n                <span class=\"n\">field</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">__fields__</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">type_</span><span class=\"p\">,</span> <span class=\"n\">ModelMetaclass</span><span class=\"p\">):</span>\n                    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">check_pynames</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">loc</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">))</span> <span class=\"k\">for</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)]</span>\n                <span class=\"k\">if</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">outer_type_</span> <span class=\"ow\">is</span> <span class=\"n\">PythonName</span><span class=\"p\">:</span>\n                    <span class=\"k\">try</span><span class=\"p\">:</span>\n                        <span class=\"n\">import_python_name</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n                    <span class=\"k\">except</span> <span class=\"p\">(</span><span class=\"ne\">ImportError</span><span class=\"p\">,</span> <span class=\"ne\">AttributeError</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n                        <span class=\"n\">errors</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">ErrorWrapper</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">loc</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)))</span>\n\n        <span class=\"n\">check_pynames</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">errors</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">ValidationError</span><span class=\"p\">(</span><span class=\"n\">errors</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">))</span></div>\n\n    <span class=\"n\">ValidationError</span> <span class=\"o\">=</span> <span class=\"n\">ValidationError</span>  <span class=\"c1\"># for convenience of access</span></div>\n\n\n<span class=\"nd\">@contextmanager</span>\n<span class=\"k\">def</span> <span class=\"nf\">_temporary_path_additions</span><span class=\"p\">(</span><span class=\"n\">paths</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Path</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">()):</span>\n    <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"nb\">reversed</span><span class=\"p\">(</span><span class=\"n\">paths</span><span class=\"p\">):</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">))</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">yield</span>\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">paths</span><span class=\"p\">:</span>\n            <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">PluginManifest</span><span class=\"o\">.</span><span class=\"n\">schema_json</span><span class=\"p\">(</span><span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n</pre></div>\n      ","pageHeaders":[],"ipynbSource":"","mdSource":""}},"__N_SSG":true}